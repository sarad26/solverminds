{"version":3,"sources":["../../src/ts/rendering/tooltipComponent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,4DAA2D;AAmB3D;IAAsC,oCAAc;IAChD;eACI,kBAAM,UAAU,CAAA,kCAAgC,CAAC;IACrD,CAAC;IAED,2BAA2B;IACpB,+BAAI,GAAX,UAAY,MAAsB;QACtB,IAAA,oBAAK,CAAY;QACzB,IAAI,CAAC,MAAM,EAAE,CAAC,SAAS,GAAG,KAAK,CAAC;IACpC,CAAC;IACL,uBAAC;AAAD,CAVA,AAUC,CAVqC,+BAAc,GAUnD;AAVY,4CAAgB","file":"tooltipComponent.js","sourcesContent":["import { PopupComponent } from '../widgets/popupComponent';\nimport { IComponent } from '../interfaces/iComponent';\n\nexport interface ITooltipParams {\n    location: string;\n    api?: any;\n    columnApi?: any;\n    context?: any;\n    colDef?: any;\n    column?: any;\n    value?: any;\n    valueFormatted?: any;\n    rowIndex?: number;\n    node?: any;\n    data?: any;\n}\n\nexport interface ITooltipComp extends IComponent<ITooltipParams> { }\n\nexport class TooltipComponent extends PopupComponent implements ITooltipComp {\n    constructor() {\n        super(/* html */`<div class=\"ag-tooltip\"></div>`);\n    }\n\n    // will need to type params\n    public init(params: ITooltipParams): void {\n        const { value } = params;\n        this.getGui().innerHTML = value;\n    }\n}\n"]}