{"version":3,"sources":["../../src/ts/rendering/row/rowController.ts"],"names":[],"mappings":"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","file":"rowController.js","sourcesContent":["import { Beans } from \"../beans\";\nimport { CellComp } from \"../cellComp\";\nimport { DataChangedEvent, RowNode } from \"../../entities/rowNode\";\nimport { Column } from \"../../entities/column\";\nimport {\n    CellFocusedEvent,\n    Events,\n    RowClickedEvent,\n    RowDoubleClickedEvent,\n    RowEditingStartedEvent,\n    RowEditingStoppedEvent,\n    RowEvent,\n    RowValueChangedEvent,\n    VirtualRowRemovedEvent\n} from \"../../events\";\n\nimport { ProcessRowParams, RowClassParams } from \"../../entities/gridOptions\";\nimport { IFrameworkOverrides } from \"../../interfaces/iFrameworkOverrides\";\nimport { Constants } from \"../../constants/constants\";\nimport { setAriaExpanded, setAriaLabel, setAriaRowIndex, setAriaSelected } from \"../../utils/aria\";\nimport {\n    addCssClass,\n    addOrRemoveCssClass,\n    addStylesToElement,\n    isElementChildOfClass,\n    removeCssClass\n} from \"../../utils/dom\";\nimport { exists, find } from \"../../utils/generic\";\nimport { isStopPropagationForAgGrid } from \"../../utils/event\";\nimport { assign } from \"../../utils/object\";\nimport { cssStyleObjectToMarkup } from \"../../utils/general\";\nimport { AngularRowUtils } from \"./angularRowUtils\";\nimport { CellPosition } from \"../../entities/cellPosition\";\nimport { RowPosition } from \"../../entities/rowPosition\";\nimport { RowComp } from \"./rowComp\";\nimport { executeNextVMTurn } from \"../../utils/function\";\nimport { RowCssClassCalculatorParams } from \"./rowCssClassCalculator\";\nimport { BeanStub } from \"../../context/beanStub\";\nimport { convertToMap } from \"../../utils/map\";\nimport { RowDragComp } from \"./rowDragComp\";\nimport { ICellRendererParams } from \"../cellRenderers/iCellRenderer\";\n\nexport enum RowType {\n    Normal = 'Normal',\n    FullWidth = 'FullWidth',\n    FullWidthLoading = 'FullWidthLoading',\n    FullWidthGroup = 'FullWidthGroup',\n    FullWidthDetail = 'FullWidthDetail'\n}\n\nexport const FullWidthRenderers: Map<RowType, string> = convertToMap([\n    [RowType.FullWidthLoading, 'agLoadingCellRenderer'],\n    [RowType.FullWidthGroup, 'agGroupRowRenderer'],\n    [RowType.FullWidthDetail, 'agDetailCellRenderer']\n]);\n\nexport const FullWidthKeys: Map<RowType, string> = convertToMap([\n    [RowType.FullWidth, 'fullWidthCellRenderer'],\n    [RowType.FullWidthLoading, 'loadingCellRenderer'],\n    [RowType.FullWidthGroup, 'groupRowRenderer'],\n    [RowType.FullWidthDetail, 'detailCellRenderer']\n]);\n\nlet instanceIdSequence = 0;\n\nexport class RowController extends BeanStub {\n\n    public static DOM_DATA_KEY_RENDERED_ROW = 'renderedRow';\n\n    private instanceId = instanceIdSequence++;\n\n    private readonly rowNode: RowNode;\n\n    private readonly beans: Beans;\n\n    private rowType: RowType;\n\n    private allRowComps: RowComp[] = [];\n\n    private leftRowComp: RowComp;\n    private rightRowComp: RowComp;\n    private centerRowComp: RowComp;\n    private fullWidthRowComp: RowComp;\n\n    private firstRowOnPage: boolean;\n    private lastRowOnPage: boolean;\n\n    private active = true;\n\n    private editingRow: boolean;\n    private rowFocused: boolean;\n\n    private centerCols: Column[] = [];\n    private leftCols: Column[] = [];\n    private rightCols: Column[] = [];\n\n    private fadeRowIn: boolean;\n    private slideRowIn: boolean;\n    private readonly useAnimationFrameForCreate: boolean;\n\n    private rowIsEven: boolean;\n\n    private paginationPage: number;\n\n    private parentScope: any;\n    private scope: any;\n\n    private lastMouseDownOnDragger = false;\n\n    private rowLevel: number;\n\n    private readonly printLayout: boolean;\n\n    private updateColumnListsPending = false;\n\n    constructor(\n        parentScope: any,\n        rowNode: RowNode,\n        beans: Beans,\n        animateIn: boolean,\n        useAnimationFrameForCreate: boolean,\n        printLayout: boolean\n    ) {\n        super();\n        this.parentScope = parentScope;\n        this.beans = beans;\n        this.rowNode = rowNode;\n        this.rowIsEven = this.rowNode.rowIndex! % 2 === 0;\n        this.paginationPage = this.beans.paginationProxy.getCurrentPage();\n        this.useAnimationFrameForCreate = useAnimationFrameForCreate;\n        this.printLayout = printLayout;\n\n        this.setAnimateFlags(animateIn);\n\n        this.rowFocused = this.beans.focusController.isRowFocused(this.rowNode.rowIndex!, this.rowNode.rowPinned);\n        this.setupAngular1Scope();\n        this.rowLevel = this.beans.rowCssClassCalculator.calculateRowLevel(this.rowNode);\n\n        this.setRowType();\n\n        this.updateColumnLists(!this.useAnimationFrameForCreate);\n\n        this.addListeners();\n\n        if (this.slideRowIn) {\n            executeNextVMTurn(this.onTopChanged.bind(this));\n        }\n        if (this.fadeRowIn) {\n            executeNextVMTurn(() => {\n                this.allRowComps.forEach(rowComp => removeCssClass(rowComp.getGui(), 'ag-opacity-zero'));\n            });\n        }\n    }\n\n    public getInstanceId(): number {\n        return this.instanceId;\n    }\n\n    public setLeftRowComp(rowComp: RowComp): void {\n        if (this.leftRowComp) { console.error('AG Grid - should not set leftRowComp twice'); }\n        this.leftRowComp = rowComp;\n        this.allRowComps.push(rowComp);\n    }\n\n    public setRightRowComp(rowComp: RowComp): void {\n        if (this.rightRowComp) { console.error('AG Grid - should not set rightRowComp twice'); }\n        this.rightRowComp = rowComp;\n        this.allRowComps.push(rowComp);\n    }\n\n    public setCenterRowComp(rowComp: RowComp): void {\n        if (this.centerRowComp) { console.error('AG Grid - should not set centerRowComp twice'); }\n        this.centerRowComp = rowComp;\n        this.allRowComps.push(rowComp);\n    }\n\n    public setFullWidthRowComp(rowComp: RowComp): void {\n        if (this.fullWidthRowComp) { console.error('AG Grid - should not set fullWidthRowComp twice'); }\n        this.fullWidthRowComp = rowComp;\n        this.allRowComps.push(rowComp);\n    }\n\n    public getColsForRowComp(pinned: string | null): Column[] {\n        switch (pinned) {\n            case Constants.PINNED_RIGHT : return this.rightCols;\n            case Constants.PINNED_LEFT : return this.leftCols;\n            default : return this.centerCols;\n        }\n    }\n\n    public getScope(): any {\n        return this.scope;\n    }\n\n    public isPrintLayout(): boolean {\n        return this.printLayout;\n    }\n\n    private setupAngular1Scope(): void {\n        const scopeResult = AngularRowUtils.createChildScopeOrNull(this.rowNode, this.parentScope, this.beans.gridOptionsWrapper);\n        if (scopeResult) {\n            this.scope = scopeResult.scope;\n            this.addDestroyFunc(scopeResult.scopeDestroyFunc);\n        }\n    }\n\n    public getCellForCol(column: Column): HTMLElement | null {\n        const cellComp = this.getRenderedCellForColumn(column);\n        return cellComp ? cellComp.getGui() : null;\n    }\n\n    public executeProcessRowPostCreateFunc(): void {\n        const func = this.beans.gridOptionsWrapper.getProcessRowPostCreateFunc();\n        if (!func) { return; }\n\n        const params: ProcessRowParams = {\n            eRow: this.centerRowComp ? this.centerRowComp.getGui() : undefined!,\n            ePinnedLeftRow: this.leftRowComp ? this.leftRowComp.getGui() : undefined!,\n            ePinnedRightRow: this.rightRowComp ? this.rightRowComp.getGui() : undefined!,\n            node: this.rowNode,\n            api: this.beans.gridOptionsWrapper.getApi()!,\n            rowIndex: this.rowNode.rowIndex!,\n            addRenderedRowListener: this.addEventListener.bind(this),\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi()!,\n            context: this.beans.gridOptionsWrapper.getContext()\n        };\n        func(params);\n    }\n\n    private setRowType(): void {\n        const isStub = this.rowNode.stub;\n        const isFullWidthCell = this.rowNode.isFullWidthCell();\n        const isDetailCell = this.beans.doingMasterDetail && this.rowNode.detail;\n        const pivotMode = this.beans.columnController.isPivotMode();\n        // we only use full width for groups, not footers. it wouldn't make sense to include footers if not looking\n        // for totals. if users complain about this, then we should introduce a new property 'footerUseEntireRow'\n        // so each can be set independently (as a customer complained about footers getting full width, hence\n        // introducing this logic)\n        const isGroupRow = !!this.rowNode.group && !this.rowNode.footer;\n        const isFullWidthGroup = isGroupRow && this.beans.gridOptionsWrapper.isGroupUseEntireRow(pivotMode);\n\n        if (isStub) {\n            this.rowType = RowType.FullWidthLoading;\n        } else if (isDetailCell) {\n            this.rowType = RowType.FullWidthDetail;\n        } else if (isFullWidthCell) {\n            this.rowType = RowType.FullWidth;\n        } else if (isFullWidthGroup) {\n            this.rowType = RowType.FullWidthGroup;\n        } else {\n            this.rowType = RowType.Normal;\n        }\n    }\n\n    private updateColumnLists(suppressAnimationFrame = false): void {\n\n        if (this.isFullWidth()) { return; }\n\n        const noAnimation = suppressAnimationFrame\n            || this.beans.gridOptionsWrapper.isSuppressAnimationFrame()\n            || this.printLayout;\n\n        if (noAnimation) {\n            this.updateColumnListsImpl();\n            return;\n        }\n\n        if (this.updateColumnListsPending) { return; }\n        this.beans.taskQueue.createTask(\n            () => {\n                if (!this.active) { return; }\n                this.updateColumnListsImpl();\n            },\n            this.rowNode.rowIndex!,\n            'createTasksP1'\n        );\n        this.updateColumnListsPending = true;\n    }\n\n    private updateColumnListsImpl(): void {\n        this.updateColumnListsPending = false;\n        if (this.printLayout) {\n            this.centerCols = this.beans.columnController.getAllDisplayedColumns();\n            this.leftCols = [];\n            this.rightCols = [];\n        } else {\n            this.centerCols = this.beans.columnController.getViewportCenterColumnsForRow(this.rowNode);\n            this.leftCols = this.beans.columnController.getDisplayedLeftColumnsForRow(this.rowNode);\n            this.rightCols = this.beans.columnController.getDisplayedRightColumnsForRow(this.rowNode);\n        }\n        this.allRowComps.forEach(rc => rc.onColumnChanged());\n    }\n\n    private setAnimateFlags(animateIn: boolean): void {\n        if (animateIn) {\n            const oldRowTopExists = exists(this.rowNode.oldRowTop);\n            // if the row had a previous position, we slide it in (animate row top)\n            this.slideRowIn = oldRowTopExists;\n            // if the row had no previous position, we fade it in (animate\n            this.fadeRowIn = !oldRowTopExists;\n        } else {\n            this.slideRowIn = false;\n            this.fadeRowIn = false;\n        }\n    }\n\n    public isEditing(): boolean {\n        return this.editingRow;\n    }\n\n    public stopRowEditing(cancel: boolean): void {\n        this.stopEditing(cancel);\n    }\n\n    public isFullWidth(): boolean {\n        return this.rowType !== RowType.Normal;\n    }\n\n    public getRowType(): RowType {\n        return this.rowType;\n    }\n\n    public refreshFullWidth(): boolean {\n        // returns 'true' if refresh succeeded\n        const tryRefresh = (rowComp: RowComp, pinned: string | null): boolean => {\n            if (!rowComp) { return true; } // no refresh needed\n\n            const cellComp = rowComp.getFullWidthRowComp();\n\n            if (!cellComp) { return true; } // no refresh needed\n\n            // no refresh method present, so can't refresh, hard refresh needed\n            if (!cellComp.refresh) { return false; }\n\n            const params = this.createFullWidthParams(rowComp.getGui(), pinned);\n            const refreshSucceeded = cellComp.refresh(params);\n\n            return refreshSucceeded;\n        };\n\n        const normalSuccess = tryRefresh(this.fullWidthRowComp, null);\n        const bodySuccess = tryRefresh(this.centerRowComp, null);\n        const leftSuccess = tryRefresh(this.leftRowComp, Constants.PINNED_LEFT);\n        const rightSuccess = tryRefresh(this.rightRowComp, Constants.PINNED_RIGHT);\n\n        const allFullWidthRowsRefreshed = normalSuccess && bodySuccess && leftSuccess && rightSuccess;\n\n        return allFullWidthRowsRefreshed;\n    }\n\n    private addListeners(): void {\n        this.addManagedListener(this.rowNode, RowNode.EVENT_HEIGHT_CHANGED, this.onRowHeightChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_SELECTED, this.onRowSelected.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_INDEX_CHANGED, this.onRowIndexChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_TOP_CHANGED, this.onTopChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_EXPANDED_CHANGED, this.updateExpandedCss.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_HAS_CHILDREN_CHANGED, this.updateExpandedCss.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_DATA_CHANGED, this.onRowNodeDataChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, this.onRowNodeCellChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_HIGHLIGHT_CHANGED, this.onRowNodeHighlightChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_DRAGGING_CHANGED, this.onRowNodeDraggingChanged.bind(this));\n        this.addManagedListener(this.rowNode, RowNode.EVENT_UI_LEVEL_CHANGED, this.onUiLevelChanged.bind(this));\n\n        const eventService = this.beans.eventService;\n        this.addManagedListener(eventService, Events.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED, this.onPaginationPixelOffsetChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_HEIGHT_SCALE_CHANGED, this.onTopChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_VIRTUAL_COLUMNS_CHANGED, this.onVirtualColumnsChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_CELL_FOCUSED, this.onCellFocusChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this));\n        this.addManagedListener(eventService, Events.EVENT_MODEL_UPDATED, this.onModelUpdated.bind(this));\n\n        this.addManagedListener(eventService, Events.EVENT_COLUMN_MOVED, this.onColumnMoved.bind(this));\n\n        this.addListenersForCellComps();\n    }\n\n    private onColumnMoved(): void {\n        this.updateColumnLists();\n    }\n\n    private addListenersForCellComps(): void {\n\n        this.addManagedListener(this.rowNode, RowNode.EVENT_ROW_INDEX_CHANGED, () => {\n            this.forEachCellComp(cellComp => cellComp.onRowIndexChanged());\n        });\n        this.addManagedListener(this.rowNode, RowNode.EVENT_CELL_CHANGED, event => {\n            this.forEachCellComp(cellComp => cellComp.onCellChanged(event));\n        });\n\n    }\n\n    private onRowNodeDataChanged(event: DataChangedEvent): void {\n        // if this is an update, we want to refresh, as this will allow the user to put in a transition\n        // into the cellRenderer refresh method. otherwise this might be completely new data, in which case\n        // we will want to completely replace the cells\n        this.forEachCellComp(cellComp =>\n            cellComp.refreshCell({\n                suppressFlash: !event.update,\n                newData: !event.update\n            })\n        );\n\n        // check for selected also, as this could be after lazy loading of the row data, in which case\n        // the id might of just gotten set inside the row and the row selected state may of changed\n        // as a result. this is what happens when selected rows are loaded in virtual pagination.\n        // - niall note - since moving to the stub component, this may no longer be true, as replacing\n        // the stub component now replaces the entire row\n        this.onRowSelected();\n\n        // as data has changed, then the style and class needs to be recomputed\n        this.postProcessCss();\n    }\n\n    private onRowNodeCellChanged(): void {\n        // as data has changed, then the style and class needs to be recomputed\n        this.postProcessCss();\n    }\n\n    private postProcessCss(): void {\n        this.postProcessStylesFromGridOptions();\n        this.postProcessClassesFromGridOptions();\n        this.postProcessRowClassRules();\n        this.postProcessRowDragging();\n    }\n\n    private onRowNodeHighlightChanged(): void {\n        const highlighted = this.rowNode.highlighted;\n\n        this.allRowComps.forEach(rowComp => {\n            const eGui = rowComp.getGui();\n            removeCssClass(eGui, 'ag-row-highlight-above');\n            removeCssClass(eGui, 'ag-row-highlight-below');\n            if (highlighted) {\n                addCssClass(eGui, 'ag-row-highlight-' + highlighted);\n            }\n        });\n    }\n\n    private onRowNodeDraggingChanged(): void {\n        this.postProcessRowDragging();\n    }\n\n    private postProcessRowDragging(): void {\n        const dragging = this.rowNode.dragging;\n        this.allRowComps.forEach(rowComp => addOrRemoveCssClass(rowComp.getGui(), 'ag-row-dragging', dragging));\n    }\n\n    private updateExpandedCss(): void {\n\n        const expandable = this.rowNode.isExpandable();\n        const expanded = this.rowNode.expanded == true;\n\n        this.allRowComps.forEach(rowComp => {\n            const eRow = rowComp.getGui();\n            addOrRemoveCssClass(eRow, 'ag-row-group', expandable);\n            addOrRemoveCssClass(eRow, 'ag-row-group-expanded', expandable && expanded);\n            addOrRemoveCssClass(eRow, 'ag-row-group-contracted', expandable && !expanded);\n            setAriaExpanded(eRow, expandable && expanded);\n        });\n    }\n\n    private onDisplayedColumnsChanged(): void {\n        // we skip animations for onDisplayedColumnChanged, as otherwise the client could remove columns and\n        // then set data, and any old valueGetter's (ie from cols that were removed) would still get called.\n        this.updateColumnLists(true);\n    }\n\n    private onVirtualColumnsChanged(): void {\n        this.updateColumnLists();\n    }\n\n    public getRowPosition(): RowPosition {\n        return {\n            rowPinned: this.rowNode.rowPinned,\n            rowIndex: this.rowNode.rowIndex as number\n        };\n    }\n\n    public onKeyboardNavigate(keyboardEvent: KeyboardEvent) {\n        const currentFullWidthComp = find(this.allRowComps, rowComp => rowComp.getGui().contains(keyboardEvent.target as HTMLElement));\n        const currentFullWidthContainer = currentFullWidthComp ? currentFullWidthComp.getGui() : null;\n        const isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\n\n        if (!isFullWidthContainerFocused) { return; }\n\n        const node = this.rowNode;\n        const lastFocusedCell = this.beans.focusController.getFocusedCell();\n        const cellPosition: CellPosition = {\n            rowIndex: node.rowIndex!,\n            rowPinned: node.rowPinned,\n            column: (lastFocusedCell && lastFocusedCell.column) as Column\n        };\n\n        this.beans.rowRenderer.navigateToNextCell(keyboardEvent, keyboardEvent.keyCode, cellPosition, true);\n        keyboardEvent.preventDefault();\n    }\n\n    public onTabKeyDown(keyboardEvent: KeyboardEvent) {\n        if (keyboardEvent.defaultPrevented || isStopPropagationForAgGrid(keyboardEvent)) { return; }\n        const currentFullWidthComp = find(this.allRowComps, rowComp => rowComp.getGui().contains(keyboardEvent.target as HTMLElement));\n        const currentFullWidthContainer = currentFullWidthComp ? currentFullWidthComp.getGui() : null;\n        const isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\n        let nextEl: HTMLElement | null = null;\n\n        if (!isFullWidthContainerFocused) {\n            nextEl = this.beans.focusController.findNextFocusableElement(currentFullWidthContainer!, false, keyboardEvent.shiftKey);\n        }\n\n        if ((this.isFullWidth() && isFullWidthContainerFocused) || !nextEl) {\n            this.beans.rowRenderer.onTabKeyDown(this, keyboardEvent);\n        }\n    }\n\n    public onFullWidthRowFocused(event: CellFocusedEvent) {\n        const node = this.rowNode;\n        const isFocused = this.isFullWidth() && event.rowIndex === node.rowIndex && event.rowPinned == node.rowPinned;\n\n        const element = this.fullWidthRowComp ? this.fullWidthRowComp.getGui() : this.centerRowComp.getGui();\n\n        addOrRemoveCssClass(element, 'ag-full-width-focus', isFocused);\n        if (isFocused) {\n            // we don't scroll normal rows into view when we focus them, so we don't want\n            // to scroll Full Width rows either.\n            element.focus({preventScroll: true});\n        }\n    }\n\n    public refreshCell(cellComp: CellComp) {\n        this.allRowComps.forEach(rc => rc.destroyCells([cellComp]));\n        this.updateColumnLists();\n    }\n\n    public onMouseEvent(eventName: string, mouseEvent: MouseEvent): void {\n        switch (eventName) {\n            case 'dblclick': this.onRowDblClick(mouseEvent); break;\n            case 'click': this.onRowClick(mouseEvent); break;\n            case 'mousedown': this.onRowMouseDown(mouseEvent); break;\n        }\n    }\n\n    public createRowEvent(type: string, domEvent?: Event): RowEvent {\n        return {\n            type: type,\n            node: this.rowNode,\n            data: this.rowNode.data,\n            rowIndex: this.rowNode.rowIndex!,\n            rowPinned: this.rowNode.rowPinned,\n            context: this.beans.gridOptionsWrapper.getContext(),\n            api: this.beans.gridOptionsWrapper.getApi()!,\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi()!,\n            event: domEvent\n        };\n    }\n\n    private createRowEventWithSource(type: string, domEvent: Event): RowEvent {\n        const event = this.createRowEvent(type, domEvent);\n        // when first developing this, we included the rowComp in the event.\n        // this seems very weird. so when introducing the event types, i left the 'source'\n        // out of the type, and just include the source in the two places where this event\n        // was fired (rowClicked and rowDoubleClicked). it doesn't make sense for any\n        // users to be using this, as the rowComp isn't an object we expose, so would be\n        // very surprising if a user was using it.\n        (event as any).source = this;\n        return event;\n    }\n\n    private onRowDblClick(mouseEvent: MouseEvent): void {\n        if (isStopPropagationForAgGrid(mouseEvent)) { return; }\n\n        const agEvent: RowDoubleClickedEvent = this.createRowEventWithSource(Events.EVENT_ROW_DOUBLE_CLICKED, mouseEvent);\n\n        this.beans.eventService.dispatchEvent(agEvent);\n    }\n\n    private onRowMouseDown(mouseEvent: MouseEvent) {\n        this.lastMouseDownOnDragger = isElementChildOfClass(mouseEvent.target as HTMLElement, 'ag-row-drag', 3);\n\n        if (!this.isFullWidth()) { return; }\n\n        const node = this.rowNode;\n        const columnController = this.beans.columnController;\n\n        this.beans.focusController.setFocusedCell(\n            node.rowIndex!,\n            columnController.getAllDisplayedColumns()[0],\n            node.rowPinned, true\n        );\n\n    }\n\n    public onRowClick(mouseEvent: MouseEvent) {\n        const stop = isStopPropagationForAgGrid(mouseEvent) || this.lastMouseDownOnDragger;\n\n        if (stop) { return; }\n\n        const agEvent: RowClickedEvent = this.createRowEventWithSource(Events.EVENT_ROW_CLICKED, mouseEvent);\n\n        this.beans.eventService.dispatchEvent(agEvent);\n\n        // ctrlKey for windows, metaKey for Apple\n        const multiSelectKeyPressed = mouseEvent.ctrlKey || mouseEvent.metaKey;\n        const shiftKeyPressed = mouseEvent.shiftKey;\n\n        // we do not allow selecting the group by clicking, when groupSelectChildren, as the logic to\n        // handle this is broken. to observe, change the logic below and allow groups to be selected.\n        // you will see the group gets selected, then all children get selected, then the grid unselects\n        // the children (as the default behaviour when clicking is to unselect other rows) which results\n        // in the group getting unselected (as all children are unselected). the correct thing would be\n        // to change this, so that children of the selected group are not then subsequenly un-selected.\n        const groupSelectsChildren = this.beans.gridOptionsWrapper.isGroupSelectsChildren();\n\n        if (\n            // we do not allow selecting groups by clicking (as the click here expands the group), or if it's a detail row,\n            // so return if it's a group row\n            (groupSelectsChildren && this.rowNode.group) ||\n            // this is needed so we don't unselect other rows when we click this row, eg if this row is not selectable,\n            // and we click it, the selection should not change (ie any currently selected row should stay selected)\n            !this.rowNode.selectable ||\n            // we also don't allow selection of pinned rows\n            this.rowNode.rowPinned ||\n            // if no selection method enabled, do nothing\n            !this.beans.gridOptionsWrapper.isRowSelection() ||\n            // if click selection suppressed, do nothing\n            this.beans.gridOptionsWrapper.isSuppressRowClickSelection()\n        ) {\n            return;\n        }\n\n        const multiSelectOnClick = this.beans.gridOptionsWrapper.isRowMultiSelectWithClick();\n        const rowDeselectionWithCtrl = !this.beans.gridOptionsWrapper.isSuppressRowDeselection();\n\n        if (this.rowNode.isSelected()) {\n            if (multiSelectOnClick) {\n                this.rowNode.setSelectedParams({ newValue: false });\n            } else if (multiSelectKeyPressed) {\n                if (rowDeselectionWithCtrl) {\n                    this.rowNode.setSelectedParams({ newValue: false });\n                }\n            } else {\n                // selected with no multi key, must make sure anything else is unselected\n                this.rowNode.setSelectedParams({ newValue: !shiftKeyPressed, clearSelection: !shiftKeyPressed, rangeSelect: shiftKeyPressed });\n            }\n        } else {\n            const clearSelection = multiSelectOnClick ? false : !multiSelectKeyPressed;\n            this.rowNode.setSelectedParams({ newValue: true, clearSelection: clearSelection, rangeSelect: shiftKeyPressed });\n        }\n    }\n\n    public setupDetailRowAutoHeight(eDetailGui: HTMLElement): void {\n\n        if (!this.beans.gridOptionsWrapper.isDetailRowAutoHeight()) { return; }\n\n        const checkRowSizeFunc = () => {\n            const clientHeight = eDetailGui.clientHeight;\n\n            // if the UI is not ready, the height can be 0, which we ignore, as otherwise a flicker will occur\n            // as UI goes from the default height, to 0, then to the real height as UI becomes ready. this means\n            // it's not possible for have 0 as auto-height, however this is an improbable use case, as even an\n            // empty detail grid would still have some styling around it giving at least a few pixels.\n            if (clientHeight != null && clientHeight > 0) {\n                // we do the update in a timeout, to make sure we are not calling from inside the grid\n                // doing another update\n                const updateRowHeightFunc = () => {\n                    this.rowNode.setRowHeight(clientHeight);\n                    if (this.beans.clientSideRowModel) {\n                        this.beans.clientSideRowModel.onRowHeightChanged();\n                    } else if (this.beans.serverSideRowModel) {\n                        this.beans.serverSideRowModel.onRowHeightChanged();\n                    }\n                };\n                this.beans.frameworkOverrides.setTimeout(updateRowHeightFunc, 0);\n            }\n        };\n\n        const resizeObserverDestroyFunc = this.beans.resizeObserverService.observeResize(eDetailGui, checkRowSizeFunc);\n\n        this.addDestroyFunc(resizeObserverDestroyFunc);\n\n        checkRowSizeFunc();\n    }\n\n    public createFullWidthParams(eRow: HTMLElement, pinned: string | null): ICellRendererParams {\n        const params = {\n            fullWidth: true,\n            data: this.rowNode.data,\n            node: this.rowNode,\n            value: this.rowNode.key,\n            valueFormatted: this.rowNode.key,\n            $scope: this.scope ? this.scope : this.parentScope,\n            $compile: this.beans.$compile,\n            rowIndex: this.rowNode.rowIndex!,\n            api: this.beans.gridOptionsWrapper.getApi()!,\n            columnApi: this.beans.gridOptionsWrapper.getColumnApi()!,\n            context: this.beans.gridOptionsWrapper.getContext(),\n            // these need to be taken out, as part of 'afterAttached' now\n            eGridCell: eRow,\n            eParentOfValue: eRow,\n            pinned: pinned,\n            addRenderedRowListener: this.addEventListener.bind(this),\n            registerRowDragger: (rowDraggerElement, dragStartPixels, value) => this.addFullWidthRowDragging(rowDraggerElement, dragStartPixels, value)\n        } as ICellRendererParams;\n\n        return params;\n    }\n\n    private addFullWidthRowDragging(\n        rowDraggerElement?: HTMLElement,\n        dragStartPixels?: number,\n        value: string = ''\n    ): void {\n        if (!this.isFullWidth()) { return; }\n\n        const rowDragComp = new RowDragComp(() => value, this.rowNode, undefined, rowDraggerElement, dragStartPixels);\n        this.createManagedBean(rowDragComp, this.beans.context);\n    }\n\n    private onUiLevelChanged(): void {\n        const newLevel = this.beans.rowCssClassCalculator.calculateRowLevel(this.rowNode);\n        if (this.rowLevel != newLevel) {\n            const classToAdd = 'ag-row-level-' + newLevel;\n            const classToRemove = 'ag-row-level-' + this.rowLevel;\n            this.allRowComps.forEach(rowComp => {\n                const eGui = rowComp.getGui();\n                addCssClass(eGui, classToAdd);\n                removeCssClass(eGui, classToRemove);\n            });\n        }\n        this.rowLevel = newLevel;\n    }\n\n    private isFirstRowOnPage(): boolean {\n        return this.rowNode.rowIndex === this.beans.paginationProxy.getPageFirstRow();\n    }\n\n    private isLastRowOnPage(): boolean {\n        return this.rowNode.rowIndex === this.beans.paginationProxy.getPageLastRow();\n    }\n\n    private onModelUpdated(): void {\n        const newFirst = this.isFirstRowOnPage();\n        const newLast = this.isLastRowOnPage();\n\n        if (this.firstRowOnPage !== newFirst) {\n            this.firstRowOnPage = newFirst;\n            this.allRowComps.forEach(rowComp => addOrRemoveCssClass(rowComp.getGui(), 'ag-row-first', newFirst));\n        }\n        if (this.lastRowOnPage !== newLast) {\n            this.lastRowOnPage = newLast;\n            this.allRowComps.forEach(rowComp => addOrRemoveCssClass(rowComp.getGui(), 'ag-row-last', newLast));\n        }\n    }\n\n    public stopEditing(cancel = false): void {\n        this.forEachCellComp(renderedCell => {\n            renderedCell.stopEditing(cancel);\n        });\n\n        if (!this.editingRow) { return; }\n\n        if (!cancel) {\n            const event: RowValueChangedEvent = this.createRowEvent(Events.EVENT_ROW_VALUE_CHANGED);\n            this.beans.eventService.dispatchEvent(event);\n        }\n        this.setEditingRow(false);\n    }\n\n    private setEditingRow(value: boolean): void {\n        this.editingRow = value;\n        this.allRowComps.forEach(rowComp => addOrRemoveCssClass(rowComp.getGui(), 'ag-row-editing', value));\n\n        const event: RowEvent = value ?\n            this.createRowEvent(Events.EVENT_ROW_EDITING_STARTED) as RowEditingStartedEvent\n            : this.createRowEvent(Events.EVENT_ROW_EDITING_STOPPED) as RowEditingStoppedEvent;\n\n        this.beans.eventService.dispatchEvent(event);\n    }\n\n    public startRowEditing(keyPress: number | null = null, charPress: string | null = null, sourceRenderedCell: CellComp | null = null): void {\n        // don't do it if already editing\n        if (this.editingRow) { return; }\n\n        this.forEachCellComp(renderedCell => {\n            const cellStartedEdit = renderedCell === sourceRenderedCell;\n            if (cellStartedEdit) {\n                renderedCell.startEditingIfEnabled(keyPress, charPress, cellStartedEdit);\n            } else {\n                renderedCell.startEditingIfEnabled(null, null, cellStartedEdit);\n            }\n        });\n        this.setEditingRow(true);\n    }\n\n    public forEachCellComp(callback: (renderedCell: CellComp) => void): void {\n        this.allRowComps.forEach(rc => rc.forEachCellComp(callback));\n    }\n\n    private postProcessClassesFromGridOptions(): void {\n        const cssClasses = this.beans.rowCssClassCalculator.processClassesFromGridOptions(this.rowNode, this.scope);\n        if (!cssClasses || !cssClasses.length) { return; }\n\n        cssClasses.forEach(classStr => {\n            this.allRowComps.forEach(rowComp => addCssClass(rowComp.getGui(), classStr));\n        });\n    }\n\n    private postProcessRowClassRules(): void {\n        this.beans.rowCssClassCalculator.processRowClassRules(\n            this.rowNode, this.scope,\n            (className: string) => {\n                this.allRowComps.forEach(rowComp => addCssClass(rowComp.getGui(), className));\n            },\n            (className: string) => {\n                this.allRowComps.forEach(rowComp => removeCssClass(rowComp.getGui(), className));\n            }\n        );\n    }\n\n    private postProcessStylesFromGridOptions(): void {\n        const rowStyles = this.processStylesFromGridOptions();\n        this.allRowComps.forEach(rowComp => addStylesToElement(rowComp.getGui(), rowStyles));\n    }\n\n    public getInitialRowTopStyle() {\n        // print layout uses normal flow layout for row positioning\n        if (this.printLayout) { return ''; }\n\n        // if sliding in, we take the old row top. otherwise we just set the current row top.\n        const pixels = this.slideRowIn ? this.roundRowTopToBounds(this.rowNode.oldRowTop!) : this.rowNode.rowTop;\n        const afterPaginationPixels = this.applyPaginationOffset(pixels!);\n        // we don't apply scaling if row is pinned\n        const afterScalingPixels = this.rowNode.isRowPinned() ? afterPaginationPixels : this.beans.rowContainerHeightService.getRealPixelPosition(afterPaginationPixels);\n        const isSuppressRowTransform = this.beans.gridOptionsWrapper.isSuppressRowTransform();\n\n        return isSuppressRowTransform ? `top: ${afterScalingPixels}px; ` : `transform: translateY(${afterScalingPixels}px);`;\n    }\n\n    public getRowBusinessKey(): string | undefined {\n        const businessKeyForNodeFunc = this.beans.gridOptionsWrapper.getBusinessKeyForNodeFunc();\n        if (typeof businessKeyForNodeFunc !== 'function') { return; }\n\n        return businessKeyForNodeFunc(this.rowNode);\n    }\n\n    public getInitialRowClasses(pinned: string | null): string[] {\n        const params: RowCssClassCalculatorParams = {\n            rowNode: this.rowNode,\n            rowFocused: this.rowFocused,\n            fadeRowIn: this.fadeRowIn,\n            rowIsEven: this.rowIsEven,\n            rowLevel: this.rowLevel,\n            fullWidthRow: this.isFullWidth(),\n            firstRowOnPage: this.isFirstRowOnPage(),\n            lastRowOnPage: this.isLastRowOnPage(),\n            printLayout: this.printLayout,\n            expandable: this.rowNode.isExpandable(),\n            scope: this.scope,\n            pinned: pinned\n        };\n        return this.beans.rowCssClassCalculator.getInitialRowClasses(params);\n    }\n\n    public preProcessStylesFromGridOptions(): string {\n        const rowStyles = this.processStylesFromGridOptions();\n        return cssStyleObjectToMarkup(rowStyles);\n    }\n\n    public processStylesFromGridOptions(): any {\n        // part 1 - rowStyle\n        const rowStyle = this.beans.gridOptionsWrapper.getRowStyle();\n\n        if (rowStyle && typeof rowStyle === 'function') {\n            console.warn('AG Grid: rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead');\n            return;\n        }\n\n        // part 1 - rowStyleFunc\n        const rowStyleFunc = this.beans.gridOptionsWrapper.getRowStyleFunc();\n        let rowStyleFuncResult: any;\n\n        if (rowStyleFunc) {\n            const params: RowClassParams = {\n                data: this.rowNode.data,\n                node: this.rowNode,\n                rowIndex: this.rowNode.rowIndex!,\n                $scope: this.scope,\n                api: this.beans.gridOptionsWrapper.getApi()!,\n                columnApi: this.beans.gridOptionsWrapper.getColumnApi()!,\n                context: this.beans.gridOptionsWrapper.getContext()\n            };\n            rowStyleFuncResult = rowStyleFunc(params);\n        }\n\n        return assign({}, rowStyle, rowStyleFuncResult);\n    }\n\n    private onRowSelected(): void {\n        const selected = this.rowNode.isSelected()!;\n        this.allRowComps.forEach(rowComp => {\n            const eGui = rowComp.getGui();\n            setAriaSelected(eGui, selected);\n            addOrRemoveCssClass(eGui, 'ag-row-selected', selected);\n            this.refreshAriaLabel(eGui, selected);\n        });\n    }\n\n    public refreshAriaLabel(node: HTMLElement, selected: boolean): void {\n        if (selected && this.beans.gridOptionsWrapper.isSuppressRowDeselection()) {\n            node.removeAttribute('aria-label');\n            return;\n        }\n\n        const translate = this.beans.gridOptionsWrapper.getLocaleTextFunc();\n        const label = translate(\n            selected ? 'ariaRowDeselect' : 'ariaRowSelect',\n            `Press SPACE to ${selected ? 'deselect' : 'select'} this row.`\n        );\n\n        setAriaLabel(node, label);\n    }\n\n    public isUseAnimationFrameForCreate(): boolean {\n        return this.useAnimationFrameForCreate;\n    }\n\n    public addHoverFunctionality(eRow: HTMLElement): void {\n        // because we use animation frames to do this, it's possible the row no longer exists\n        // by the time we get to add it\n        if (!this.active) { return; }\n\n        // because mouseenter and mouseleave do not propagate, we cannot listen on the gridPanel\n        // like we do for all the other mouse events.\n\n        // because of the pinning, we cannot simply add / remove the class based on the eRow. we\n        // have to check all eRow's (body & pinned). so the trick is if any of the rows gets a\n        // mouse hover, it sets such in the rowNode, and then all three reflect the change as\n        // all are listening for event on the row node.\n\n        // step 1 - add listener, to set flag on row node\n        this.addManagedListener(eRow, 'mouseenter', () => this.rowNode.onMouseEnter());\n        this.addManagedListener(eRow, 'mouseleave', () => this.rowNode.onMouseLeave());\n\n        // step 2 - listen for changes on row node (which any eRow can trigger)\n        this.addManagedListener(this.rowNode, RowNode.EVENT_MOUSE_ENTER, () => {\n            // if hover turned off, we don't add the class. we do this here so that if the application\n            // toggles this property mid way, we remove the hover form the last row, but we stop\n            // adding hovers from that point onwards.\n            if (!this.beans.gridOptionsWrapper.isSuppressRowHoverHighlight()) {\n                addCssClass(eRow, 'ag-row-hover');\n            }\n        });\n\n        this.addManagedListener(this.rowNode, RowNode.EVENT_MOUSE_LEAVE, () => {\n            removeCssClass(eRow, 'ag-row-hover');\n        });\n    }\n\n    // for animation, we don't want to animate entry or exit to a very far away pixel,\n    // otherwise the row would move so fast, it would appear to disappear. so this method\n    // moves the row closer to the viewport if it is far away, so the row slide in / out\n    // at a speed the user can see.\n    public roundRowTopToBounds(rowTop: number): number {\n        const gridBodyCon = this.beans.controllersService.getGridBodyController();\n        const range = gridBodyCon.getScrollFeature().getVScrollPosition();\n        const minPixel = this.applyPaginationOffset(range.top, true) - 100;\n        const maxPixel = this.applyPaginationOffset(range.bottom, true) + 100;\n\n        return Math.min(Math.max(minPixel, rowTop), maxPixel);\n    }\n\n    protected getFrameworkOverrides(): IFrameworkOverrides {\n        return this.beans.frameworkOverrides;\n    }\n\n    private onRowHeightChanged(): void {\n        // check for exists first - if the user is resetting the row height, then\n        // it will be null (or undefined) momentarily until the next time the flatten\n        // stage is called where the row will then update again with a new height\n        if (exists(this.rowNode.rowHeight)) {\n            const heightPx = `${this.rowNode.rowHeight}px`;\n\n            this.allRowComps.forEach(rowComp => rowComp.getGui().style.height = heightPx);\n        }\n    }\n\n    public addEventListener(eventType: string, listener: Function): void {\n        if (eventType === 'renderedRowRemoved' || eventType === 'rowRemoved') {\n            eventType = Events.EVENT_VIRTUAL_ROW_REMOVED;\n            console.warn('AG Grid: Since version 11, event renderedRowRemoved is now called ' + Events.EVENT_VIRTUAL_ROW_REMOVED);\n        }\n        super.addEventListener(eventType, listener);\n    }\n\n    public removeEventListener(eventType: string, listener: Function): void {\n        if (eventType === 'renderedRowRemoved' || eventType === 'rowRemoved') {\n            eventType = Events.EVENT_VIRTUAL_ROW_REMOVED;\n            console.warn('AG Grid: Since version 11, event renderedRowRemoved and rowRemoved is now called ' + Events.EVENT_VIRTUAL_ROW_REMOVED);\n        }\n        super.removeEventListener(eventType, listener);\n    }\n\n    // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\n    public destroyFirstPass(): void {\n        this.active = false;\n\n        // why do we have this method? shouldn't everything below be added as a destroy func beside\n        // the corresponding create logic?\n\n        this.setupRemoveAnimation();\n\n        const event: VirtualRowRemovedEvent = this.createRowEvent(Events.EVENT_VIRTUAL_ROW_REMOVED);\n\n        this.dispatchEvent(event);\n        this.beans.eventService.dispatchEvent(event);\n        super.destroy();\n    }\n\n    private setupRemoveAnimation(): void {\n        const rowStillVisibleJustNotInViewport = this.rowNode.rowTop != null;\n        if (rowStillVisibleJustNotInViewport) {\n            // if the row is not rendered, but in viewport, it means it has moved,\n            // so we animate the row out. if the new location is very far away,\n            // the animation will be so fast the row will look like it's just disappeared,\n            // so instead we animate to a position just outside the viewport.\n            const rowTop = this.roundRowTopToBounds(this.rowNode.rowTop!);\n            this.setRowTop(rowTop);\n        } else {\n            this.allRowComps.forEach(rowComp => {\n                addCssClass(rowComp.getGui(), 'ag-opacity-zero');\n            });\n        }\n    }\n\n    public destroySecondPass(): void {\n        this.allRowComps.forEach(c => c.destroy());\n        this.allRowComps.length = 0;\n    }\n\n    private onCellFocusChanged(): void {\n        const rowFocused = this.beans.focusController.isRowFocused(this.rowNode.rowIndex!, this.rowNode.rowPinned);\n\n        if (rowFocused !== this.rowFocused) {\n            this.allRowComps.forEach(rowComp => {\n                const eRow = rowComp.getGui();\n                addOrRemoveCssClass(eRow, 'ag-row-focus', rowFocused);\n                addOrRemoveCssClass(eRow, 'ag-row-no-focus', !rowFocused);\n            });\n            this.rowFocused = rowFocused;\n        }\n\n        // if we are editing, then moving the focus out of a row will stop editing\n        if (!rowFocused && this.editingRow) {\n            this.stopEditing(false);\n        }\n    }\n\n    private onPaginationChanged(): void {\n        const currentPage = this.beans.paginationProxy.getCurrentPage();\n        // it is possible this row is in the new page, but the page number has changed, which means\n        // it needs to reposition itself relative to the new page\n        if (this.paginationPage !== currentPage) {\n            this.paginationPage = currentPage;\n            this.onTopChanged();\n        }\n    }\n\n    private onTopChanged(): void {\n        this.setRowTop(this.rowNode.rowTop!);\n    }\n\n    private onPaginationPixelOffsetChanged(): void {\n        // the pixel offset is used when calculating rowTop to set on the row DIV\n        this.onTopChanged();\n    }\n\n    // applies pagination offset, eg if on second page, and page height is 500px, then removes\n    // 500px from the top position, so a row with rowTop 600px is displayed at location 100px.\n    // reverse will take the offset away rather than add.\n    private applyPaginationOffset(topPx: number, reverse = false): number {\n        if (this.rowNode.isRowPinned()) {\n            return topPx;\n        }\n\n        const pixelOffset = this.beans.paginationProxy.getPixelOffset();\n        const multiplier = reverse ? 1 : -1;\n\n        return topPx + (pixelOffset * multiplier);\n    }\n\n    public setRowTop(pixels: number): void {\n        // print layout uses normal flow layout for row positioning\n        if (this.printLayout) { return; }\n\n        // need to make sure rowTop is not null, as this can happen if the node was once\n        // visible (ie parent group was expanded) but is now not visible\n        if (exists(pixels)) {\n            const afterPaginationPixels = this.applyPaginationOffset(pixels);\n            const afterScalingPixels = this.rowNode.isRowPinned() ? afterPaginationPixels : this.beans.rowContainerHeightService.getRealPixelPosition(afterPaginationPixels);\n            const topPx = `${afterScalingPixels}px`;\n\n            const suppressRowTransform = this.beans.gridOptionsWrapper.isSuppressRowTransform();\n            this.allRowComps.forEach(rowComp => {\n                const eGui = rowComp.getGui();\n                if (suppressRowTransform) {\n                    eGui.style.top = topPx;\n                } else {\n                    eGui.style.transform = `translateY(${topPx})`;\n                }\n            });\n        }\n    }\n\n    public getRowNode(): RowNode {\n        return this.rowNode;\n    }\n\n    public getRenderedCellForColumn(column: Column): CellComp | null {\n        const cellComps = this.allRowComps.map(rc => rc.getCellComp(column.getColId()));\n        let cellComp = find(cellComps, c => !!c);\n\n        if (cellComp) { return cellComp; }\n\n        const spannedCellComps = this.allRowComps.map(rc => rc.getCellCompSpanned(column));\n        cellComp = find(spannedCellComps, c => !!c);\n\n        return cellComp || null;\n    }\n\n    private onRowIndexChanged(): void {\n        // we only bother updating if the rowIndex is present. if it is not present, it means this row\n        // is child of a group node, and the group node was closed, it's the only way to have no row index.\n        // when this happens, row is about to be de-rendered, so we don't care, rowComp is about to die!\n        if (this.rowNode.rowIndex != null) {\n            this.onCellFocusChanged();\n            this.updateRowIndexes();\n        }\n    }\n\n    private updateRowIndexes(): void {\n        const rowIndexStr = this.rowNode.getRowIndexString();\n        const rowIsEven = this.rowNode.rowIndex! % 2 === 0;\n        const rowIsEvenChanged = this.rowIsEven !== rowIsEven;\n        const headerRowCount = this.beans.headerNavigationService.getHeaderRowCount();\n\n        if (rowIsEvenChanged) {\n            this.rowIsEven = rowIsEven;\n        }\n\n        this.allRowComps.forEach(rowComp => {\n            const eRow = rowComp.getGui();\n            eRow.setAttribute('row-index', rowIndexStr);\n            setAriaRowIndex(eRow, headerRowCount + this.rowNode.rowIndex! + 1);\n\n            if (!rowIsEvenChanged) { return; }\n            addOrRemoveCssClass(eRow, 'ag-row-even', rowIsEven);\n            addOrRemoveCssClass(eRow, 'ag-row-odd', !rowIsEven);\n        });\n    }\n\n    // returns the pinned left container, either the normal one, or the embedded full with one if exists\n    public getPinnedLeftRowElement(): HTMLElement {\n        return this.leftRowComp ? this.leftRowComp.getGui() : undefined!;\n    }\n\n    // returns the pinned right container, either the normal one, or the embedded full with one if exists\n    public getPinnedRightRowElement(): HTMLElement {\n        return this.rightRowComp ? this.rightRowComp.getGui() : undefined!;\n    }\n\n    // returns the body container, either the normal one, or the embedded full with one if exists\n    public getBodyRowElement(): HTMLElement {\n        return this.centerRowComp ? this.centerRowComp.getGui() : undefined!;\n    }\n\n    // returns the full width container\n    public getFullWidthRowElement(): HTMLElement {\n        return this.fullWidthRowComp ? this.fullWidthRowComp.getGui() : undefined!;\n    }\n\n}\n"]}