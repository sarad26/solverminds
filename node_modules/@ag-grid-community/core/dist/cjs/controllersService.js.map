{"version":3,"sources":["../../src/ts/controllersService.ts"],"names":[],"mappings":"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","file":"controllersService.js","sourcesContent":["import { GridCompController } from \"./gridComp/gridCompController\";\nimport { Bean } from \"./context/context\";\nimport { GridBodyController } from \"./gridBodyComp/gridBodyController\";\nimport { RowContainerController } from \"./gridBodyComp/rowContainer/rowContainerController\";\nimport { HeaderRootComp } from \"./headerRendering/headerRootComp\";\nimport { FakeHorizontalScrollController } from \"./gridBodyComp/fakeHorizontalScrollController\";\nimport { BeanStub } from \"./context/beanStub\";\n\n// for all controllers that are singletons, they can register here so other parts\n// of the application can access them.\n\ninterface ReadyParams {\n    gridCompCon: GridCompController;\n    gridBodyCon: GridBodyController;\n\n    centerRowContainerCon: RowContainerController;\n    leftRowContainerCon: RowContainerController;\n    rightRowContainerCon: RowContainerController;\n\n    bottomCenterRowContainerCon: RowContainerController;\n    bottomLeftRowContainerCon: RowContainerController;\n    bottomRightRowContainerCon: RowContainerController;\n\n    topCenterRowContainerCon: RowContainerController;\n    topLeftRowContainerCon: RowContainerController;\n    topRightRowContainerCon: RowContainerController;\n\n    fakeHScrollCon: FakeHorizontalScrollController;\n    headerRootComp: HeaderRootComp;\n}\n\n@Bean('controllersService')\nexport class ControllersService extends BeanStub {\n\n    private gridCompCon: GridCompController;\n    private gridBodyCon: GridBodyController;\n\n    private centerRowContainerCon: RowContainerController;\n    private leftRowContainerCon: RowContainerController;\n    private rightRowContainerCon: RowContainerController;\n\n    private bottomCenterRowContainerCon: RowContainerController;\n    private bottomLeftRowContainerCon: RowContainerController;\n    private bottomRightRowContainerCon: RowContainerController;\n\n    private topCenterRowContainerCon: RowContainerController;\n    private topLeftRowContainerCon: RowContainerController;\n    private topRightRowContainerCon: RowContainerController;\n\n    private fakeHScrollCon: FakeHorizontalScrollController;\n\n    private headerRootComp: HeaderRootComp;\n\n    private ready = false;\n    private readyCallbacks: ((p: ReadyParams) => void)[] = [];\n\n    private checkReady(): void {\n        this.ready =\n            this.gridCompCon != null\n            && this.gridBodyCon != null\n\n            && this.centerRowContainerCon != null\n            && this.leftRowContainerCon != null\n            && this.rightRowContainerCon != null\n\n            && this.bottomCenterRowContainerCon != null\n            && this.bottomLeftRowContainerCon != null\n            && this.bottomRightRowContainerCon != null\n\n            && this.topCenterRowContainerCon != null\n            && this.topLeftRowContainerCon != null\n            && this.topRightRowContainerCon != null\n\n            && this.fakeHScrollCon != null\n            && this.headerRootComp != null;\n\n        if (this.ready) {\n            const p = this.createReadyParams();\n            this.readyCallbacks.forEach(c => c(p));\n            this.readyCallbacks.length = 0;\n        }\n    }\n\n    public whenReady(callback: (p: ReadyParams) => void): void {\n        if (this.ready) {\n            callback(this.createReadyParams());\n        } else {\n            this.readyCallbacks.push(callback);\n        }\n    }\n\n    private createReadyParams(): ReadyParams {\n        return {\n            centerRowContainerCon: this.centerRowContainerCon,\n            leftRowContainerCon: this.leftRowContainerCon,\n            rightRowContainerCon: this.rightRowContainerCon,\n\n            bottomCenterRowContainerCon: this.bottomCenterRowContainerCon,\n            bottomLeftRowContainerCon: this.bottomLeftRowContainerCon,\n            bottomRightRowContainerCon: this.bottomRightRowContainerCon,\n\n            topCenterRowContainerCon: this.topCenterRowContainerCon,\n            topLeftRowContainerCon: this.topLeftRowContainerCon,\n            topRightRowContainerCon: this.topRightRowContainerCon,\n\n            fakeHScrollCon: this.fakeHScrollCon,\n            gridBodyCon: this.gridBodyCon,\n            gridCompCon: this.gridCompCon,\n            headerRootComp: this.headerRootComp,\n        };\n    }\n\n    public registerFakeHScrollCon(con: FakeHorizontalScrollController): void {\n        this.fakeHScrollCon = con;\n        this.checkReady();\n    }\n\n    public registerHeaderRootComp(headerRootComp: HeaderRootComp): void {\n        this.headerRootComp = headerRootComp;\n        this.checkReady();\n    }\n\n    public registerCenterRowContainerCon(con: RowContainerController): void {\n        this.centerRowContainerCon = con;\n        this.checkReady();\n    }\n\n    public registerLeftRowContainerCon(con: RowContainerController): void {\n        this.leftRowContainerCon = con;\n        this.checkReady();\n    }\n\n    public registerRightRowContainerCon(con: RowContainerController): void {\n        this.rightRowContainerCon = con;\n        this.checkReady();\n    }\n\n    public registerTopCenterRowContainerCon(con: RowContainerController): void {\n        this.topCenterRowContainerCon = con;\n        this.checkReady();\n    }\n\n    public registerTopLeftRowContainerCon(con: RowContainerController): void {\n        this.topLeftRowContainerCon = con;\n        this.checkReady();\n    }\n\n    public registerTopRightRowContainerCon(con: RowContainerController): void {\n        this.topRightRowContainerCon = con;\n        this.checkReady();\n    }\n\n    public registerBottomCenterRowContainerCon(con: RowContainerController): void {\n        this.bottomCenterRowContainerCon = con;\n        this.checkReady();\n    }\n\n    public registerBottomLeftRowContainerCon(con: RowContainerController): void {\n        this.bottomLeftRowContainerCon = con;\n        this.checkReady();\n    }\n\n    public registerBottomRightRowContainerCon(con: RowContainerController): void {\n        this.bottomRightRowContainerCon = con;\n        this.checkReady();\n    }\n\n    public registerGridBodyController(con: GridBodyController): void {\n        this.gridBodyCon = con;\n        this.checkReady();\n    }\n\n    public registerGridCompController(con: GridCompController): void {\n        this.gridCompCon = con;\n        this.checkReady();\n    }\n\n    public getFakeHScrollCon(): FakeHorizontalScrollController {\n        return this.fakeHScrollCon;\n    }\n\n    public getHeaderRootComp(): HeaderRootComp {\n        return this.headerRootComp;\n    }\n\n    public getGridCompController(): GridCompController {\n        return this.gridCompCon;\n    }\n\n    public getCenterRowContainerCon(): RowContainerController {\n        return this.centerRowContainerCon;\n    }\n\n    public getTopCenterRowContainerCon(): RowContainerController {\n        return this.topCenterRowContainerCon;\n    }\n\n    public getBottomCenterRowContainerCon(): RowContainerController {\n        return this.bottomCenterRowContainerCon;\n    }\n\n    public getGridBodyController(): GridBodyController {\n        return this.gridBodyCon;\n    }\n}"]}