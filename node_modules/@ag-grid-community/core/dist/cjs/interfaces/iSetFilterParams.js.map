{"version":3,"sources":["../../src/ts/interfaces/iSetFilterParams.ts"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA","file":"iSetFilterParams.js","sourcesContent":["import { ICellRendererComp, ICellRendererFunc } from '../rendering/cellRenderers/iCellRenderer';\nimport { ColDef, ValueFormatterParams } from '../entities/colDef';\nimport { IProvidedFilterParams } from '../filter/provided/providedFilter';\n\nexport interface SetFilterValuesFuncParams {\n    success: (values: string[]) => void;\n    colDef: ColDef;\n}\n\nexport type SetFilterValuesFunc = (params: SetFilterValuesFuncParams) => void;\nexport type SetFilterValues = SetFilterValuesFunc | any[];\n\nexport interface ISetFilterParams extends IProvidedFilterParams {\n    /** @deprecated */ suppressRemoveEntries?: boolean;\n    values?: SetFilterValues;\n    refreshValuesOnOpen?: boolean;\n    cellHeight?: number;\n    suppressSorting?: boolean;\n    cellRenderer?: { new(): ICellRendererComp; } | ICellRendererFunc | string;\n    suppressMiniFilter?: boolean;\n    applyMiniFilterWhileTyping?: boolean;\n    suppressSelectAll?: boolean;\n    defaultToNothingSelected?: boolean;\n    /** @deprecated */ suppressSyncValuesAfterDataChange?: boolean;\n    comparator?: (a: any, b: any) => number;\n    textFormatter?: (from: string) => string;\n    valueFormatter?: (params: ValueFormatterParams) => string;\n    /** @deprecated */ selectAllOnMiniFilter?: boolean;\n    /** @deprecated */ syncValuesLikeExcel?: boolean;\n    showTooltips?: boolean;\n    excelMode?: 'mac' | 'windows';\n}"]}