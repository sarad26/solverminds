{"version":3,"sources":["../../src/ts/gridComp/gridComp.ts"],"names":[],"mappings":"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","file":"gridComp.js","sourcesContent":["import { GridBodyComp } from \"../gridBodyComp/gridBodyComp\";\nimport { Logger, LoggerFactory } from \"../logger\";\nimport { Autowired } from \"../context/context\";\nimport { Component } from \"../widgets/component\";\nimport { ISideBar } from \"../interfaces/iSideBar\";\nimport { RefSelector } from \"../widgets/componentAnnotations\";\nimport { ManagedFocusComponent } from \"../widgets/managedFocusComponent\";\nimport { ColumnController } from \"../columnController/columnController\";\nimport { addCssClass, addOrRemoveCssClass, isVisible } from \"../utils/dom\";\nimport { last } from \"../utils/array\";\nimport { FocusController } from \"../focusController\";\nimport { GridCompController, GridCompView } from \"./gridCompController\";\nimport { LayoutCssClasses, UpdateLayoutClassesParams } from \"../styling/layoutFeature\";\n\nexport class GridComp extends ManagedFocusComponent {\n\n    @Autowired('columnController') private columnController: ColumnController;\n    @Autowired('loggerFactory') private loggerFactory: LoggerFactory;\n\n    @RefSelector('gridBody') private gridBodyComp: GridBodyComp;\n    @RefSelector('sideBar') private sideBarComp: ISideBar & Component;\n    @RefSelector('rootWrapperBody') private eRootWrapperBody: HTMLElement;\n\n    private logger: Logger;\n    private eGridDiv: HTMLElement;\n    private con: GridCompController;\n\n    constructor(eGridDiv: HTMLElement) {\n        super(undefined, true);\n        this.eGridDiv = eGridDiv;\n    }\n\n    protected postConstruct(): void {\n        this.logger = this.loggerFactory.create('GridComp');\n\n        const view: GridCompView = {\n            destroyGridUi:\n                () => this.destroyBean(this),\n            setRtlClass:\n                (cssClass: string) => addCssClass(this.getGui(), cssClass),\n            addOrRemoveKeyboardFocusClass:\n                (addOrRemove: boolean) => this.addOrRemoveCssClass(FocusController.AG_KEYBOARD_FOCUS, addOrRemove),\n            forceFocusOutOfContainer: this.forceFocusOutOfContainer.bind(this),\n            updateLayoutClasses: this.updateLayoutClasses.bind(this),\n            getFocusableContainers: this.getFocusableContainers.bind(this)\n        };\n\n        this.con = this.createManagedBean(new GridCompController());\n\n        const template = this.createTemplate();\n        this.setTemplate(template);\n\n        this.con.setView(view, this.eGridDiv, this.getGui());\n\n        this.insertGridIntoDom();\n\n        super.postConstruct();\n    }\n\n    private insertGridIntoDom(): void {\n        const eGui = this.getGui();\n        this.eGridDiv.appendChild(eGui);\n        this.addDestroyFunc(() => {\n            this.eGridDiv.removeChild(eGui);\n            this.logger.log('Grid removed from DOM');\n        });\n    }\n\n    private updateLayoutClasses(params: UpdateLayoutClassesParams): void {\n        addOrRemoveCssClass(this.eRootWrapperBody, LayoutCssClasses.AUTO_HEIGHT, params.autoHeight);\n        addOrRemoveCssClass(this.eRootWrapperBody, LayoutCssClasses.NORMAL, params.normal);\n        addOrRemoveCssClass(this.eRootWrapperBody, LayoutCssClasses.PRINT, params.print);\n\n        this.addOrRemoveCssClass(LayoutCssClasses.AUTO_HEIGHT, params.autoHeight);\n        this.addOrRemoveCssClass(LayoutCssClasses.NORMAL, params.normal);\n        this.addOrRemoveCssClass(LayoutCssClasses.PRINT, params.print);\n    }\n\n    private createTemplate(): string {\n        const dropZones = this.con.showDropZones() ? '<ag-grid-header-drop-zones></ag-grid-header-drop-zones>' : '';\n        const sideBar = this.con.showSideBar() ? '<ag-side-bar ref=\"sideBar\"></ag-side-bar>' : '';\n        const statusBar = this.con.showStatusBar() ? '<ag-status-bar ref=\"statusBar\"></ag-status-bar>' : '';\n        const watermark = this.con.showWatermark() ? '<ag-watermark></ag-watermark>' : '';\n\n        const template = /* html */\n            `<div ref=\"eRootWrapper\" class=\"ag-root-wrapper\">\n                ${dropZones}\n                <div class=\"ag-root-wrapper-body\" ref=\"rootWrapperBody\">\n                    <ag-grid-body ref=\"gridBody\"></ag-grid-body>\n                    ${sideBar}\n                </div>\n                ${statusBar}\n                <ag-pagination></ag-pagination>\n                ${watermark}\n            </div>`;\n\n        return template;\n    }\n\n    public getFocusableElement(): HTMLElement {\n        return this.eRootWrapperBody;\n    }\n\n    protected getFocusableContainers(): HTMLElement[] {\n        const focusableContainers = [\n            this.gridBodyComp.getGui()\n        ];\n\n        if (this.sideBarComp) {\n            focusableContainers.push(\n                this.sideBarComp.getGui()\n            );\n        }\n\n        return focusableContainers.filter(el => isVisible(el));\n    }\n\n    protected focusInnerElement(fromBottom?: boolean): boolean {\n        const focusableContainers = this.getFocusableContainers();\n\n        if (fromBottom) {\n            if (focusableContainers.length > 1) {\n                return this.focusController.focusInto(last(focusableContainers));\n            }\n\n            const lastColumn = last(this.columnController.getAllDisplayedColumns());\n            if (this.focusController.focusGridView(lastColumn, true)) { return true; }\n        }\n\n        return this.con.focusGridHeader();\n    }\n\n    protected onTabKeyDown(): void { }\n}\n"]}