{"version":3,"sources":["../../src/ts/components/framework/userComponentRegistry.ts"],"names":[],"mappings":"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","file":"userComponentRegistry.js","sourcesContent":["import { TextCellEditor } from \"../../rendering/cellEditors/textCellEditor\";\nimport { Autowired, Bean, PostConstruct } from \"../../context/context\";\nimport { IComponent } from \"../../interfaces/iComponent\";\nimport { DateFilter } from \"../../filter/provided/date/dateFilter\";\nimport { HeaderComp } from \"../../headerRendering/header/headerComp\";\nimport { HeaderGroupComp } from \"../../headerRendering/headerGroup/headerGroupComp\";\nimport { GroupCellRenderer } from \"../../rendering/cellRenderers/groupCellRenderer\";\nimport { AnimateShowChangeCellRenderer } from \"../../rendering/cellRenderers/animateShowChangeCellRenderer\";\nimport { AnimateSlideCellRenderer } from \"../../rendering/cellRenderers/animateSlideCellRenderer\";\nimport { LoadingCellRenderer } from \"../../rendering/cellRenderers/loadingCellRenderer\";\nimport { SelectCellEditor } from \"../../rendering/cellEditors/selectCellEditor\";\nimport { PopupTextCellEditor } from \"../../rendering/cellEditors/popupTextCellEditor\";\nimport { PopupSelectCellEditor } from \"../../rendering/cellEditors/popupSelectCellEditor\";\nimport { LargeTextCellEditor } from \"../../rendering/cellEditors/largeTextCellEditor\";\nimport { NumberFilter } from \"../../filter/provided/number/numberFilter\";\nimport { LoadingOverlayComponent } from \"../../rendering/overlays/loadingOverlayComponent\";\nimport { NoRowsOverlayComponent } from \"../../rendering/overlays/noRowsOverlayComponent\";\nimport { TooltipComponent } from \"../../rendering/tooltipComponent\";\nimport { GridOptions } from \"../../entities/gridOptions\";\nimport { DefaultDateComponent } from \"../../filter/provided/date/defaultDateComponent\";\nimport { DateFloatingFilter } from \"../../filter/provided/date/dateFloatingFilter\";\nimport { TextFilter } from \"../../filter/provided/text/textFilter\";\nimport { NumberFloatingFilter } from \"../../filter/provided/number/numberFloatingFilter\";\nimport { TextFloatingFilter } from \"../../filter/provided/text/textFloatingFilter\";\nimport { BeanStub } from \"../../context/beanStub\";\nimport { iterateObject } from '../../utils/object';\nimport { doOnce } from \"../../utils/function\";\n\nexport enum RegisteredComponentSource {\n    DEFAULT, REGISTERED\n}\n\n/**\n * B the business interface (ie IHeader)\n * A the agGridComponent interface (ie IHeaderComp). The final object acceptable by ag-grid\n */\nexport interface RegisteredComponent<A extends IComponent<any> & B, B> {\n    component: RegisteredComponentInput<A, B>;\n    componentFromFramework: boolean;\n    source: RegisteredComponentSource;\n}\n\nexport type RegisteredComponentInput<A extends IComponent<any> & B, B> =\n    AgGridRegisteredComponentInput<A>\n    | { new(): B; };\nexport type AgGridRegisteredComponentInput<A extends IComponent<any>> = AgGridComponentFunctionInput | { new(): A; };\nexport type AgGridComponentFunctionInput = (params: any) => string | HTMLElement;\n\nexport interface DeprecatedComponentName {\n    propertyHolder: string;\n    newComponentName: string;\n}\n\n@Bean('userComponentRegistry')\nexport class UserComponentRegistry extends BeanStub {\n\n    @Autowired('gridOptions')\n    private gridOptions: GridOptions;\n\n    private agGridDefaults: { [key: string]: AgGridRegisteredComponentInput<any>; } = {\n        //date\n        agDateInput: DefaultDateComponent,\n\n        //header\n        agColumnHeader: HeaderComp,\n        agColumnGroupHeader: HeaderGroupComp,\n\n        //floating filters\n        agTextColumnFloatingFilter: TextFloatingFilter,\n        agNumberColumnFloatingFilter: NumberFloatingFilter,\n        agDateColumnFloatingFilter: DateFloatingFilter,\n\n        // renderers\n        agAnimateShowChangeCellRenderer: AnimateShowChangeCellRenderer,\n        agAnimateSlideCellRenderer: AnimateSlideCellRenderer,\n        agGroupCellRenderer: GroupCellRenderer,\n        agGroupRowRenderer: GroupCellRenderer,\n        agLoadingCellRenderer: LoadingCellRenderer,\n\n        //editors\n        agCellEditor: TextCellEditor,\n        agTextCellEditor: TextCellEditor,\n        agSelectCellEditor: SelectCellEditor,\n        agPopupTextCellEditor: PopupTextCellEditor,\n        agPopupSelectCellEditor: PopupSelectCellEditor,\n        agLargeTextCellEditor: LargeTextCellEditor,\n\n        //filter\n        agTextColumnFilter: TextFilter,\n        agNumberColumnFilter: NumberFilter,\n        agDateColumnFilter: DateFilter,\n\n        //overlays\n        agLoadingOverlay: LoadingOverlayComponent,\n        agNoRowsOverlay: NoRowsOverlayComponent,\n\n        // tooltips\n        agTooltipComponent: TooltipComponent\n    };\n\n    private agDeprecatedNames: { [key: string]: DeprecatedComponentName; } = {\n        set: {\n            newComponentName: 'agSetColumnFilter',\n            propertyHolder: 'filter'\n        },\n        text: {\n            newComponentName: 'agTextColumnFilter',\n            propertyHolder: 'filter'\n        },\n        number: {\n            newComponentName: 'agNumberColumnFilter',\n            propertyHolder: 'filter'\n        },\n        date: {\n            newComponentName: 'agDateColumnFilter',\n            propertyHolder: 'filter'\n        },\n\n        group: {\n            newComponentName: 'agGroupCellRenderer',\n            propertyHolder: 'cellRenderer'\n        },\n        animateShowChange: {\n            newComponentName: 'agAnimateShowChangeCellRenderer',\n            propertyHolder: 'cellRenderer'\n        },\n        animateSlide: {\n            newComponentName: 'agAnimateSlideCellRenderer',\n            propertyHolder: 'cellRenderer'\n        },\n\n        select: {\n            newComponentName: 'agSelectCellEditor',\n            propertyHolder: 'cellEditor'\n        },\n        largeText: {\n            newComponentName: 'agLargeTextCellEditor',\n            propertyHolder: 'cellEditor'\n        },\n        popupSelect: {\n            newComponentName: 'agPopupSelectCellEditor',\n            propertyHolder: 'cellEditor'\n        },\n        popupText: {\n            newComponentName: 'agPopupTextCellEditor',\n            propertyHolder: 'cellEditor'\n        },\n        richSelect: {\n            newComponentName: 'agRichSelectCellEditor',\n            propertyHolder: 'cellEditor'\n        },\n\n        headerComponent: {\n            newComponentName: 'agColumnHeader',\n            propertyHolder: 'headerComponent'\n        }\n\n    };\n    private jsComponents: { [key: string]: AgGridRegisteredComponentInput<any>; } = {};\n    private frameworkComponents: { [key: string]: { new(): any; }; } = {};\n\n    @PostConstruct\n    private init(): void {\n        if (this.gridOptions.components != null) {\n            iterateObject(this.gridOptions.components, (key, component) => this.registerComponent(key, component));\n        }\n\n        if (this.gridOptions.frameworkComponents != null) {\n            iterateObject(this.gridOptions.frameworkComponents,\n                (key, component) => this.registerFwComponent(key, component as any));\n        }\n    }\n\n    public registerDefaultComponent<A extends IComponent<any>>(rawName: string, component: AgGridRegisteredComponentInput<A>) {\n        const name = this.translateIfDeprecated(rawName);\n\n        if (this.agGridDefaults[name]) {\n            console.error(`Trying to overwrite a default component. You should call registerComponent`);\n            return;\n        }\n\n        this.agGridDefaults[name] = component;\n    }\n\n    public registerComponent<A extends IComponent<any>>(rawName: string, component: AgGridRegisteredComponentInput<A>) {\n        const name = this.translateIfDeprecated(rawName);\n\n        if (this.frameworkComponents[name]) {\n            console.error(`Trying to register a component that you have already registered for frameworks: ${name}`);\n            return;\n        }\n\n        this.jsComponents[name] = component;\n    }\n\n    /**\n     * B the business interface (ie IHeader)\n     * A the agGridComponent interface (ie IHeaderComp). The final object acceptable by ag-grid\n     */\n    public registerFwComponent<A extends IComponent<any> & B, B>(rawName: string, component: { new(): IComponent<B>; }) {\n        const name = this.translateIfDeprecated(rawName);\n\n        if (this.jsComponents[name]) {\n            console.error(`Trying to register a component that you have already registered for plain javascript: ${name}`);\n            return;\n        }\n\n        this.frameworkComponents[name] = component;\n    }\n\n    /**\n     * B the business interface (ie IHeader)\n     * A the agGridComponent interface (ie IHeaderComp). The final object acceptable by ag-grid\n     */\n    public retrieve<A extends IComponent<any> & B, B>(rawName: string): RegisteredComponent<A, B> | null {\n        const name = this.translateIfDeprecated(rawName);\n        const frameworkComponent = this.frameworkComponents[name];\n\n        if (frameworkComponent) {\n            return {\n                componentFromFramework: true,\n                component: frameworkComponent as { new(): B; },\n                source: RegisteredComponentSource.REGISTERED\n            };\n        }\n\n        const jsComponent = this.jsComponents[name];\n\n        if (jsComponent) {\n            return {\n                componentFromFramework: false,\n                component: jsComponent as { new(): A; },\n                source: RegisteredComponentSource.REGISTERED\n            };\n        }\n\n        const defaultComponent = this.agGridDefaults[name];\n\n        if (defaultComponent) {\n            return {\n                componentFromFramework: false,\n                component: defaultComponent as { new(): A; },\n                source: RegisteredComponentSource.DEFAULT\n            };\n        }\n\n        if (Object.keys(this.agGridDefaults).indexOf(name) < 0) {\n            console.warn(`AG Grid: Looking for component [${name}] but it wasn't found.`);\n        }\n\n        return null;\n    }\n\n    private translateIfDeprecated(raw: string): string {\n        const deprecatedInfo = this.agDeprecatedNames[raw];\n\n        if (deprecatedInfo != null) {\n            doOnce(() => {\n                console.warn(`ag-grid. Since v15.0 component names have been renamed to be namespaced. You should rename ${deprecatedInfo.propertyHolder}:${raw} to ${deprecatedInfo.propertyHolder}:${deprecatedInfo.newComponentName}`);\n            }, 'DEPRECATE_COMPONENT_' + raw);\n\n            return deprecatedInfo.newComponentName;\n        }\n\n        return raw;\n    }\n}\n"]}