{"version":3,"sources":["../../src/ts/headless/testHeadless.ts"],"names":[],"mappings":";;;;;;;;AAEA,oCAA4C;AAE5C;IAAA;IA6CA,CAAC;IA3CU,kCAAW,GAAlB,UAAmB,IAAiB,EAAE,WAAwB;QAE1D,IAAM,eAAe,GAAI,WAAW,CAAC,GAAW,CAAC,eAAkC,CAAC;QAEpF,IAAM,UAAU,GAAG,eAAe,CAAC,aAAa,EAAE,CAAC;QACnD,IAAM,IAAI,GAAG,eAAe,CAAC,OAAO,EAAE,CAAC;QAEvC,kBAAY,CAAC,IAAI,CAAC,CAAC;QACnB,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAE/C,UAAU,CAAC,OAAO,CAAC,UAAA,SAAS;YACxB,IAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACzC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAExB,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,GAAG;gBACzB,IAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBACzC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBAErB,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,EAAE;oBAClB,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC;iBAC5B;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,CAAC,UAAA,GAAG;YACZ,IAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACzC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAExB,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI;gBAClB,IAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBACzC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;gBAErB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;oBACpB,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;iBACzC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAEpB,OAAO,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;IAC7C,CAAC;IAEL,mBAAC;AAAD,CA7CA,AA6CC,IAAA;AA7CY,oCAAY","file":"testHeadless.js","sourcesContent":["import { GridOptions } from \"../entities/gridOptions\";\nimport { HeadlessService } from \"./headlessService\";\nimport { clearElement } from \"../utils/dom\";\n\nexport class TestHeadless {\n\n    public doSomething(eDiv: HTMLElement, gridOptions: GridOptions): void {\n\n        const headlessService = (gridOptions.api as any).headlessService as HeadlessService;\n\n        const headerRows = headlessService.getHeaderRows();\n        const rows = headlessService.getRows();\n\n        clearElement(eDiv);\n        const eTable = document.createElement('table');\n\n        headerRows.forEach(headerRow => {\n            const eTr = document.createElement('tr');\n            eTable.appendChild(eTr);\n\n            headerRow.columns.forEach(col => {\n                const eTh = document.createElement('th');\n                eTr.appendChild(eTh);\n\n                if (col.name != null) {\n                    eTh.innerText = col.name;\n                }\n            });\n        });\n\n        rows.forEach(row => {\n            const eTr = document.createElement('tr');\n            eTable.appendChild(eTr);\n\n            row.cells.forEach(cell => {\n                const eTd = document.createElement('td');\n                eTr.appendChild(eTd);\n\n                if (cell.value != null) {\n                    eTd.innerText = cell.value.toString();\n                }\n            });\n        });\n\n        eDiv.append(eTable);\n\n        console.warn('TestHeadless.doSomething');\n    }\n\n}"]}