{"version":3,"sources":["../../src/ts/widgets/agDialog.ts"],"names":[],"mappings":"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","file":"agDialog.js","sourcesContent":["import { DragListenerParams, DragService } from \"../dragAndDrop/dragService\";\nimport { Autowired } from \"../context/context\";\nimport { PanelOptions, AgPanel } from \"./agPanel\";\nimport { Component } from \"./component\";\nimport { addCssClass, setDisplayed } from \"../utils/dom\";\nimport { createIconNoSpan } from \"../utils/icon\";\n\nexport type ResizableSides = 'topLeft' |\n    'top' |\n    'topRight' |\n    'right' |\n    'bottomRight' |\n    'bottom' |\n    'bottomLeft' |\n    'left';\n\nexport type ResizableStructure = {\n    [key in ResizableSides]?: boolean;\n};\n\ninterface MappedResizer {\n    element: HTMLElement;\n    dragSource?: DragListenerParams;\n}\n\nexport interface DialogOptions extends PanelOptions {\n    eWrapper?: HTMLElement;\n    modal?: boolean;\n    alwaysOnTop?: boolean;\n    movable?: boolean;\n    resizable?: boolean | ResizableStructure;\n    maximizable?: boolean;\n    x?: number;\n    y?: number;\n    centered?: boolean;\n}\n\nexport class AgDialog extends AgPanel {\n\n    private RESIZE_TEMPLATE = /* html */\n        `<div class=\"ag-resizer-wrapper\">\n            <div ref=\"eTopLeftResizer\" class=\"ag-resizer ag-resizer-topLeft\"></div>\n            <div ref=\"eTopResizer\" class=\"ag-resizer ag-resizer-top\"></div>\n            <div ref=\"eTopRightResizer\" class=\"ag-resizer ag-resizer-topRight\"></div>\n            <div ref=\"eRightResizer\" class=\"ag-resizer ag-resizer-right\"></div>\n            <div ref=\"eBottomRightResizer\" class=\"ag-resizer ag-resizer-bottomRight\"></div>\n            <div ref=\"eBottomResizer\" class=\"ag-resizer ag-resizer-bottom\"></div>\n            <div ref=\"eBottomLeftResizer\" class=\"ag-resizer ag-resizer-bottomLeft\"></div>\n            <div ref=\"eLeftResizer\" class=\"ag-resizer ag-resizer-left\"></div>\n        </div>`;\n\n    @Autowired('dragService') private dragService: DragService;\n\n    private moveElement: HTMLElement;\n    private moveElementDragListener: DragListenerParams | undefined;\n    private resizable: ResizableStructure = {};\n    private movable = false;\n    private isMoving = false;\n    private isMaximizable: boolean = false;\n    private isMaximized: boolean = false;\n    private maximizeListeners: (() => void)[] = [];\n    private maximizeButtonComp: Component | undefined;\n    private maximizeIcon: HTMLElement | undefined;\n    private minimizeIcon: HTMLElement | undefined;\n    private resizeListenerDestroy: (() => void) | null | undefined = null;\n\n    private resizerMap: {\n        [key in ResizableSides]: MappedResizer\n    };\n\n    private isResizing: boolean = false;\n\n    private lastPosition = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n    };\n\n    protected config: DialogOptions | undefined;\n\n    constructor(config?: DialogOptions) {\n        super(config);\n    }\n\n    protected postConstruct() {\n        const eGui = this.getGui();\n        const { movable, resizable, maximizable } = this.config as DialogOptions;\n\n        addCssClass(eGui, 'ag-dialog');\n        this.moveElement = this.eTitleBar;\n\n        super.postConstruct();\n\n        this.addManagedListener(eGui, 'focusin', (e: FocusEvent) => {\n            if (eGui.contains(e.relatedTarget as HTMLElement)) { return; }\n            this.popupService.bringPopupToFront(eGui);\n        });\n\n        if (movable) {\n            this.setMovable(movable);\n        }\n\n        if (maximizable) { this.setMaximizable(maximizable); }\n\n        this.addResizers();\n        if (resizable) { this.setResizable(resizable); }\n    }\n\n    protected renderComponent() {\n        const eGui = this.getGui();\n        const { alwaysOnTop, modal } = this.config as DialogOptions;\n\n        const addPopupRes = this.popupService.addPopup({\n            modal,\n            eChild: eGui,\n            closeOnEsc: true,\n            closedCallback: this.destroy.bind(this),\n            alwaysOnTop\n        });\n        if (addPopupRes) {\n            this.close = addPopupRes.hideFunc;\n        }\n    }\n\n    private addResizers() {\n        const eGui = this.getGui();\n\n        if (!eGui) { return; }\n\n        const parser = new DOMParser();\n        const resizers = parser.parseFromString(this.RESIZE_TEMPLATE, 'text/html').body;\n\n        eGui.appendChild(resizers.firstChild!);\n        this.createMap();\n    }\n\n    private createMap() {\n        const eGui = this.getGui();\n        this.resizerMap = {\n            topLeft: { element: eGui.querySelector('[ref=eTopLeftResizer]') as HTMLElement },\n            top: { element: eGui.querySelector('[ref=eTopResizer]') as HTMLElement },\n            topRight: { element: eGui.querySelector('[ref=eTopRightResizer]') as HTMLElement },\n            right: { element: eGui.querySelector('[ref=eRightResizer]') as HTMLElement },\n            bottomRight: { element: eGui.querySelector('[ref=eBottomRightResizer]') as HTMLElement },\n            bottom: { element: eGui.querySelector('[ref=eBottomResizer]') as HTMLElement },\n            bottomLeft: { element: eGui.querySelector('[ref=eBottomLeftResizer]') as HTMLElement },\n            left: { element: eGui.querySelector('[ref=eLeftResizer]') as HTMLElement }\n        };\n    }\n\n    private getResizerElement(side: ResizableSides): HTMLElement | null {\n        return this.resizerMap[side].element;\n    }\n\n    private onResizeStart(e: MouseEvent) {\n        this.isResizing = true;\n        this.updateDragStartPosition(e.clientX, e.clientY);\n    }\n\n    private onResize(e: MouseEvent, side: ResizableSides) {\n        if (!this.isResizing) { return; }\n\n        const isLeft = !!side.match(/left/i);\n        const isRight = !!side.match(/right/i);\n        const isTop = !!side.match(/top/i);\n        const isBottom = !!side.match(/bottom/i);\n        const isHorizontal = isLeft || isRight;\n        const isVertical = isTop || isBottom;\n        const { movementX, movementY } = this.calculateMouseMovement({ e, isLeft, isTop });\n\n        let offsetLeft = 0;\n        let offsetTop = 0;\n\n        if (isHorizontal && movementX) {\n            const direction = isLeft ? -1 : 1;\n            const oldWidth = this.getWidth();\n            const newWidth = oldWidth! + (movementX * direction);\n            let skipWidth = false;\n\n            if (isLeft) {\n                offsetLeft = oldWidth! - newWidth;\n                if (this.position.x + offsetLeft <= 0 || newWidth <= this.minWidth) {\n                    skipWidth = true;\n                    offsetLeft = 0;\n                }\n            }\n\n            if (!skipWidth) {\n                this.setWidth(newWidth);\n            }\n        }\n\n        if (isVertical && movementY) {\n            const direction = isTop ? -1 : 1;\n            const oldHeight = this.getHeight();\n            const newHeight = oldHeight! + (movementY * direction);\n            let skipHeight = false;\n\n            if (isTop) {\n                offsetTop = oldHeight! - newHeight;\n                if (this.position.y + offsetTop <= 0 || newHeight <= this.minHeight!) {\n                    skipHeight = true;\n                    offsetTop = 0;\n                }\n            }\n\n            if (!skipHeight) {\n                this.setHeight(newHeight);\n            }\n        }\n\n        this.updateDragStartPosition(e.clientX, e.clientY);\n\n        if (offsetLeft || offsetTop) {\n            this.offsetElement(\n                this.position.x + offsetLeft,\n                this.position.y + offsetTop\n            );\n        }\n    }\n\n    private onResizeEnd() {\n        this.isResizing = false;\n\n        const params = {\n            type: 'resize',\n            api: this.gridOptionsWrapper.getApi(),\n            columnApi: this.gridOptionsWrapper.getColumnApi()\n        };\n\n        this.dispatchEvent(params);\n    }\n\n    private onMoveStart(e: MouseEvent) {\n        this.isMoving = true;\n        this.updateDragStartPosition(e.clientX, e.clientY);\n    }\n\n    private onMove(e: MouseEvent) {\n        if (!this.isMoving) { return; }\n        const { x, y } = this.position;\n        const { movementX, movementY } = this.calculateMouseMovement({\n            e,\n            isTop: true,\n            anywhereWithin: true,\n            topBuffer: this.getHeight()! - this.getBodyHeight()\n        });\n\n        this.offsetElement(x + movementX, y + movementY);\n\n        this.updateDragStartPosition(e.clientX, e.clientY);\n    }\n\n    private onMoveEnd() {\n        this.isMoving = false;\n    }\n\n    private toggleMaximize() {\n        if (this.isMaximized) {\n            const { x, y, width, height } = this.lastPosition;\n\n            this.setWidth(width);\n            this.setHeight(height);\n            this.offsetElement(x, y);\n        } else {\n            this.lastPosition.width = this.getWidth()!;\n            this.lastPosition.height = this.getHeight()!;\n            this.lastPosition.x = this.position.x;\n            this.lastPosition.y = this.position.y;\n            this.offsetElement(0, 0);\n            this.setHeight('100%');\n            this.setWidth('100%');\n        }\n\n        this.isMaximized = !this.isMaximized;\n        this.refreshMaximizeIcon();\n    }\n\n    private refreshMaximizeIcon() {\n        setDisplayed(this.maximizeIcon!, !this.isMaximized);\n        setDisplayed(this.minimizeIcon!, this.isMaximized);\n    }\n\n    private clearMaximizebleListeners() {\n        if (this.maximizeListeners.length) {\n            this.maximizeListeners.forEach(destroyListener => destroyListener());\n            this.maximizeListeners.length = 0;\n        }\n\n        if (this.resizeListenerDestroy) {\n            this.resizeListenerDestroy();\n            this.resizeListenerDestroy = null;\n        }\n    }\n\n    protected destroy(): void {\n        this.setResizable(false);\n        this.setMovable(false);\n\n        this.maximizeButtonComp = this.destroyBean(this.maximizeButtonComp);\n\n        this.clearMaximizebleListeners();\n        super.destroy();\n    }\n\n    public setResizable(resizable: boolean | ResizableStructure) {\n        if (typeof resizable === 'boolean') {\n            resizable = {\n                topLeft: resizable,\n                top: resizable,\n                topRight: resizable,\n                right: resizable,\n                bottomRight: resizable,\n                bottom: resizable,\n                bottomLeft: resizable,\n                left: resizable\n            };\n        }\n\n        Object.keys(resizable).forEach(side => {\n            const r = resizable as ResizableStructure;\n            const s = side as ResizableSides;\n            const val = !!r[s];\n            const el = this.getResizerElement(s);\n\n            const params: DragListenerParams = this.resizerMap[s].dragSource! || {\n                eElement: el,\n                onDragStart: this.onResizeStart.bind(this),\n                onDragging: (e: MouseEvent) => this.onResize(e, s),\n                onDragStop: this.onResizeEnd.bind(this),\n            };\n\n            if (!!this.resizable[s] !== val || (!this.isAlive() && !val)) {\n                if (val) {\n                    this.dragService.addDragSource(params);\n                    el!.style.pointerEvents = 'all';\n                } else {\n                    this.dragService.removeDragSource(params);\n                    el!.style.pointerEvents = 'none';\n                }\n                this.resizerMap[s].dragSource = val ? params : undefined;\n            }\n        });\n    }\n\n    public setMovable(movable: boolean) {\n        if (movable === this.movable) { return; }\n\n        this.movable = movable;\n\n        const params: DragListenerParams = this.moveElementDragListener || {\n            eElement: this.moveElement,\n            onDragStart: this.onMoveStart.bind(this),\n            onDragging: this.onMove.bind(this),\n            onDragStop: this.onMoveEnd.bind(this)\n        };\n\n        if (movable) {\n            this.dragService.addDragSource(params);\n            this.moveElementDragListener = params;\n        } else {\n            this.dragService.removeDragSource(params);\n            this.moveElementDragListener = undefined;\n        }\n    }\n\n    public setMaximizable(maximizable: boolean) {\n        if (!maximizable) {\n            this.clearMaximizebleListeners();\n\n            if (this.maximizeButtonComp) {\n                this.destroyBean(this.maximizeButtonComp);\n                this.maximizeButtonComp = this.maximizeIcon = this.minimizeIcon = undefined;\n            }\n\n            return;\n        }\n\n        const eTitleBar = this.eTitleBar;\n\n        if (!eTitleBar || maximizable === this.isMaximizable) { return; }\n\n        const maximizeButtonComp = this.maximizeButtonComp =\n            this.createBean(new Component(/* html */`<div class=\"ag-dialog-button\"></span>`));\n\n        const eGui = maximizeButtonComp.getGui();\n\n        eGui.appendChild(this.maximizeIcon = createIconNoSpan('maximize', this.gridOptionsWrapper)!);\n        addCssClass(this.maximizeIcon, 'ag-panel-title-bar-button-icon');\n\n        eGui.appendChild(this.minimizeIcon = createIconNoSpan('minimize', this.gridOptionsWrapper)!);\n        addCssClass(this.minimizeIcon, 'ag-panel-title-bar-button-icon');\n        addCssClass(this.minimizeIcon, 'ag-hidden');\n\n        maximizeButtonComp.addManagedListener(eGui, 'click', this.toggleMaximize.bind(this));\n\n        this.addTitleBarButton(maximizeButtonComp, 0);\n\n        this.maximizeListeners.push(\n            this.addManagedListener(eTitleBar, 'dblclick', this.toggleMaximize.bind(this))!\n        );\n\n        this.resizeListenerDestroy = this.addManagedListener(this, 'resize', () => {\n            this.isMaximized = false;\n            this.refreshMaximizeIcon();\n        });\n    }\n}\n"]}