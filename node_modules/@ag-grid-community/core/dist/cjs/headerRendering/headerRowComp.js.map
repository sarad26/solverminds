{"version":3,"sources":["../../src/ts/headerRendering/headerRowComp.ts"],"names":[],"mappings":"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","file":"headerRowComp.js","sourcesContent":["import { Component } from '../widgets/component';\nimport { Autowired, PostConstruct, PreDestroy } from '../context/context';\nimport { GridOptionsWrapper } from '../gridOptionsWrapper';\nimport { ColumnGroupChild } from '../entities/columnGroupChild';\nimport { ColumnGroup } from '../entities/columnGroup';\nimport { ColumnController } from '../columnController/columnController';\nimport { Column } from '../entities/column';\nimport { Events } from '../events';\nimport { HeaderWrapperComp } from './header/headerWrapperComp';\nimport { HeaderGroupWrapperComp } from './headerGroup/headerGroupWrapperComp';\nimport { Constants } from '../constants/constants';\nimport { FloatingFilterWrapper } from '../filter/floating/floatingFilterWrapper';\nimport { isBrowserSafari } from '../utils/browser';\nimport { missing } from '../utils/generic';\nimport { removeFromArray } from '../utils/array';\nimport { setDomChildOrder } from '../utils/dom';\nimport { FocusController } from '../focusController';\nimport { AbstractHeaderWrapper } from './header/abstractHeaderWrapper';\nimport { setAriaRowIndex } from '../utils/aria';\n\nexport enum HeaderRowType {\n    COLUMN_GROUP, COLUMN, FLOATING_FILTER\n}\n\nexport class HeaderRowComp extends Component {\n\n    @Autowired('columnController') private columnController: ColumnController;\n    @Autowired('focusController') private focusController: FocusController;\n\n    private readonly pinned: string | null;\n\n    private readonly type: HeaderRowType;\n    private dept: number;\n\n    private headerComps: { [key: string]: AbstractHeaderWrapper; } = {};\n\n    constructor(dept: number, type: HeaderRowType, pinned: string | null) {\n        super(/* html */`<div class=\"ag-header-row\" role=\"row\"></div>`);\n        this.setRowIndex(dept);\n        this.type = type;\n        this.pinned = pinned;\n\n        const niceClassName = HeaderRowType[type].toLowerCase().replace(/_/g, '-');\n        this.addCssClass(`ag-header-row-${niceClassName}`);\n\n        if (isBrowserSafari()) {\n            // fix for a Safari rendering bug that caused the header to flicker above chart panels\n            // as you move the mouse over the header\n            this.getGui().style.transform = 'translateZ(0)';\n        }\n    }\n\n    public forEachHeaderElement(callback: (comp: Component) => void): void {\n        Object.keys(this.headerComps).forEach(key => {\n            callback(this.headerComps[key]);\n        });\n    }\n\n    private setRowIndex(rowIndex: number) {\n        this.dept = rowIndex;\n        setAriaRowIndex(this.getGui(), rowIndex + 1);\n    }\n\n    public getRowIndex(): number {\n        return this.dept;\n    }\n\n    public getType(): HeaderRowType {\n        return this.type;\n    }\n\n    @PreDestroy\n    private destroyAllChildComponents(): void {\n        const idsOfAllChildren = Object.keys(this.headerComps);\n        this.destroyChildComponents(idsOfAllChildren);\n    }\n\n    private destroyChildComponents(idsToDestroy: string[]): void {\n        idsToDestroy.forEach(id => {\n            const childHeaderWrapper: AbstractHeaderWrapper = this.headerComps[id];\n            this.getGui().removeChild(childHeaderWrapper.getGui());\n            this.destroyBean(childHeaderWrapper);\n            delete this.headerComps[id];\n        });\n    }\n\n    private onRowHeightChanged(): void {\n        let headerRowCount = this.columnController.getHeaderRowCount();\n        const sizes: number[] = [];\n\n        let numberOfFloating = 0;\n        let groupHeight: number | null | undefined;\n        let headerHeight: number | null | undefined;\n\n        if (this.columnController.isPivotMode()) {\n            groupHeight = this.gridOptionsWrapper.getPivotGroupHeaderHeight();\n            headerHeight = this.gridOptionsWrapper.getPivotHeaderHeight();\n        } else {\n            if (this.columnController.hasFloatingFilters()) {\n                headerRowCount++;\n                numberOfFloating = 1;\n            }\n\n            groupHeight = this.gridOptionsWrapper.getGroupHeaderHeight();\n            headerHeight = this.gridOptionsWrapper.getHeaderHeight();\n        }\n\n        const numberOfNonGroups = 1 + numberOfFloating;\n        const numberOfGroups = headerRowCount - numberOfNonGroups;\n\n        for (let i = 0; i < numberOfGroups; i++) { sizes.push(groupHeight as number); }\n\n        sizes.push(headerHeight as number);\n\n        for (let i = 0; i < numberOfFloating; i++) { sizes.push(this.gridOptionsWrapper.getFloatingFiltersHeight() as number); }\n\n        let rowHeight = 0;\n\n        for (let i = 0; i < this.dept; i++) { rowHeight += sizes[i]; }\n\n        this.getGui().style.top = rowHeight + 'px';\n        this.getGui().style.height = sizes[this.dept] + 'px';\n    }\n\n    //noinspection JSUnusedLocalSymbols\n    @PostConstruct\n    private init(): void {\n        this.onRowHeightChanged();\n        this.onVirtualColumnsChanged();\n        this.setWidth();\n\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_HEADER_HEIGHT, this.onRowHeightChanged.bind(this));\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_PIVOT_HEADER_HEIGHT, this.onRowHeightChanged.bind(this));\n\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_GROUP_HEADER_HEIGHT, this.onRowHeightChanged.bind(this));\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_PIVOT_GROUP_HEADER_HEIGHT, this.onRowHeightChanged.bind(this));\n\n        this.addManagedListener(this.gridOptionsWrapper, GridOptionsWrapper.PROP_FLOATING_FILTERS_HEIGHT, this.onRowHeightChanged.bind(this));\n\n        this.addManagedListener(this.eventService, Events.EVENT_VIRTUAL_COLUMNS_CHANGED, this.onVirtualColumnsChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_RESIZED, this.onColumnResized.bind(this));\n        // this.addManagedListener(this.eventService, Events.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this));\n    }\n\n    private onColumnResized(): void {\n        this.setWidth();\n    }\n\n    private setWidth(): void {\n        const width = this.getWidthForRow();\n        this.getGui().style.width = width + 'px';\n    }\n\n    private getWidthForRow(): number {\n        const printLayout = this.gridOptionsWrapper.getDomLayout() === Constants.DOM_LAYOUT_PRINT;\n\n        if (printLayout) {\n            const centerRow = missing(this.pinned);\n\n            if (centerRow) {\n                return this.columnController.getContainerWidth(Constants.PINNED_RIGHT)\n                    + this.columnController.getContainerWidth(Constants.PINNED_LEFT)\n                    + this.columnController.getContainerWidth(null);\n            }\n\n            return 0;\n        }\n\n        // if not printing, just return the width as normal\n        return this.columnController.getContainerWidth(this.pinned);\n    }\n\n    private onDisplayedColumnsChanged(): void {\n        this.onVirtualColumnsChanged();\n        this.setWidth();\n    }\n\n    private getColumnsInViewport(): ColumnGroupChild[] {\n        const printLayout = this.gridOptionsWrapper.getDomLayout() === Constants.DOM_LAYOUT_PRINT;\n        return printLayout ? this.getColumnsInViewportPrintLayout() : this.getColumnsInViewportNormalLayout();\n    }\n\n    private getColumnsInViewportPrintLayout(): ColumnGroupChild[] {\n        // for print layout, we add all columns into the center\n        if (this.pinned != null) { return []; }\n\n        let viewportColumns: ColumnGroupChild[] = [];\n        const actualDepth = this.getActualDepth();\n\n        [Constants.PINNED_LEFT, null, Constants.PINNED_RIGHT].forEach(pinned => {\n            const items = this.columnController.getVirtualHeaderGroupRow(pinned, actualDepth);\n            viewportColumns = viewportColumns.concat(items);\n        });\n\n        return viewportColumns;\n    }\n\n    private getActualDepth(): number {\n        return this.type == HeaderRowType.FLOATING_FILTER ? this.dept - 1 : this.dept;\n    }\n\n    private getColumnsInViewportNormalLayout(): ColumnGroupChild[] {\n        // when in normal layout, we add the columns for that container only\n        return this.columnController.getVirtualHeaderGroupRow(this.pinned, this.getActualDepth());\n    }\n\n    private onVirtualColumnsChanged(): void {\n        const compIdsToRemove = Object.keys(this.headerComps);\n        const compIdsWanted: string[] = [];\n        const columns = this.getColumnsInViewport();\n\n        columns.forEach((child: ColumnGroupChild) => {\n            // skip groups that have no displayed children. this can happen when the group is broken,\n            // and this section happens to have nothing to display for the open / closed state.\n            // (a broken group is one that is split, ie columns in the group have a non-group column\n            // in between them)\n            if (child.isEmptyGroup()) {\n                return;\n            }\n\n            const idOfChild = child.getUniqueId();\n            const eParentContainer = this.getGui();\n\n            // if we already have this cell rendered, do nothing\n            let previousComp: AbstractHeaderWrapper | undefined = this.headerComps[idOfChild];\n\n            // it's possible there is a new Column with the same ID, but it's for a different Column.\n            // this is common with pivoting, where the pivot cols change, but the id's are still pivot_0,\n            // pivot_1 etc. so if new col but same ID, need to remove the old col here first as we are\n            // about to replace it in the this.headerComps map.\n            const previousCompForOldColumn = previousComp && previousComp.getColumn() != child;\n            if (previousCompForOldColumn) {\n                this.destroyChildComponents([idOfChild]);\n                removeFromArray(compIdsToRemove, idOfChild);\n                previousComp = undefined;\n            }\n\n            if (previousComp) {\n                // already have comp for this column, so do nothing\n                removeFromArray(compIdsToRemove, idOfChild);\n            } else {\n                // don't have comp, need to create one\n                const headerComp = this.createHeaderComp(child);\n                this.headerComps[idOfChild] = headerComp;\n                eParentContainer.appendChild(headerComp.getGui());\n            }\n\n            compIdsWanted.push(idOfChild);\n        });\n\n        // we want to keep columns that are focused, otherwise keyboard navigation breaks\n        const isFocusedAndDisplayed = (colId: string) => {\n            const wrapper = this.headerComps[colId];\n            const isFocused = this.focusController.isHeaderWrapperFocused(wrapper);\n            if (!isFocused) { return false; }\n            const isDisplayed = this.columnController.isDisplayed(wrapper.getColumn());\n            return isDisplayed;\n        };\n\n        const focusedAndDisplayedComps = compIdsToRemove.filter(isFocusedAndDisplayed);\n\n        focusedAndDisplayedComps.forEach(colId => {\n            removeFromArray(compIdsToRemove, colId);\n            compIdsWanted.push(colId);\n        });\n\n        // at this point, anything left in currentChildIds is an element that is no longer in the viewport\n        this.destroyChildComponents(compIdsToRemove);\n\n        const ensureDomOrder = this.gridOptionsWrapper.isEnsureDomOrder();\n        if (ensureDomOrder) {\n            const correctChildOrder = compIdsWanted.map(id => this.headerComps[id].getGui());\n            setDomChildOrder(this.getGui(), correctChildOrder);\n        }\n    }\n\n    private createHeaderComp(columnGroupChild: ColumnGroupChild): AbstractHeaderWrapper {\n        let result: AbstractHeaderWrapper;\n\n        switch (this.type) {\n            case HeaderRowType.COLUMN_GROUP:\n                result = new HeaderGroupWrapperComp(columnGroupChild as ColumnGroup, this.pinned);\n                break;\n            case HeaderRowType.FLOATING_FILTER:\n                result = new FloatingFilterWrapper(columnGroupChild as Column, this.pinned);\n                break;\n            default:\n                result = new HeaderWrapperComp(columnGroupChild as Column, this.pinned);\n                break;\n        }\n\n        this.createBean(result);\n        result.setParentComponent(this);\n\n        return result;\n    }\n\n    public getHeaderComps(): { [key: string]: AbstractHeaderWrapper; } {\n        return this.headerComps;\n    }\n}\n"]}