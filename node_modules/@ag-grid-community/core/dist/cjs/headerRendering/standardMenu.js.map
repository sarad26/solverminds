{"version":3,"sources":["../../src/ts/headerRendering/standardMenu.ts"],"names":[],"mappings":"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","file":"standardMenu.js","sourcesContent":["import { Autowired, Bean } from '../context/context';\nimport { BeanStub } from \"../context/beanStub\";\nimport { IMenuFactory } from '../interfaces/iMenuFactory';\nimport { FilterManager } from '../filter/filterManager';\nimport { Column } from '../entities/column';\nimport { PopupService } from '../widgets/popupService';\nimport { FocusController } from '../focusController';\nimport { addCssClass, isVisible } from '../utils/dom';\nimport { KeyCode } from '../constants/keyCode';\nimport { GridBodyComp } from \"../gridBodyComp/gridBodyComp\";\n\n@Bean('menuFactory')\nexport class StandardMenuFactory extends BeanStub implements IMenuFactory {\n\n    @Autowired('filterManager') private filterManager: FilterManager;\n    @Autowired('popupService') private popupService: PopupService;\n    @Autowired('focusController') private focusController: FocusController;\n\n    private hidePopup: () => void;\n    private tabListener: () => null;\n\n    private gridBodyComp: GridBodyComp;\n\n    public registerGridComp(gridBodyComp: GridBodyComp): void {\n        this.gridBodyComp = gridBodyComp;\n    }\n\n    public hideActiveMenu(): void {\n        if (this.hidePopup) {\n            this.hidePopup();\n        }\n    }\n\n    public showMenuAfterMouseEvent(column: Column, mouseEvent: MouseEvent | Touch): void {\n        this.showPopup(column, eMenu => {\n            this.popupService.positionPopupUnderMouseEvent({\n                column,\n                type: 'columnMenu',\n                mouseEvent,\n                ePopup: eMenu\n            });\n        }, mouseEvent.target as HTMLElement);\n    }\n\n    public showMenuAfterButtonClick(column: Column, eventSource: HTMLElement): void {\n        this.showPopup(column, eMenu => {\n            this.popupService.positionPopupUnderComponent({\n                type: 'columnMenu',\n                eventSource,\n                ePopup: eMenu,\n                keepWithinBounds: true,\n                column\n            });\n        }, eventSource);\n    }\n\n    public showPopup(column: Column, positionCallback: (eMenu: HTMLElement) => void, eventSource: HTMLElement): void {\n        const filterWrapper = this.filterManager.getOrCreateFilterWrapper(column, 'COLUMN_MENU');\n        const eMenu = document.createElement('div');\n\n        eMenu.setAttribute('role', 'presentation');\n        addCssClass(eMenu, 'ag-menu');\n\n        this.tabListener = this.addManagedListener(eMenu, 'keydown', (e) => this.trapFocusWithin(e, eMenu))!;\n\n        filterWrapper.guiPromise.then(gui => eMenu.appendChild(gui!));\n\n        let hidePopup: (() => void);\n\n        const anchorToElement = eventSource || this.gridBodyComp.getGui();\n        const closedCallback = (e: MouseEvent | TouchEvent | KeyboardEvent) => {\n            column.setMenuVisible(false, 'contextMenu');\n            const isKeyboardEvent = e instanceof KeyboardEvent;\n\n            if (this.tabListener) {\n                this.tabListener = this.tabListener()!;\n            }\n\n            if (isKeyboardEvent && eventSource && isVisible(eventSource)) {\n                const focusableEl = this.focusController.findTabbableParent(eventSource);\n\n                if (focusableEl) { focusableEl.focus(); }\n            }\n        };\n\n        const addPopupRes = this.popupService.addPopup({\n            modal: true,\n            eChild: eMenu,\n            closeOnEsc: true,\n            closedCallback,\n            positionCallback: () => positionCallback(eMenu),\n            anchorToElement\n        });\n\n        if (addPopupRes) {\n            this.hidePopup = hidePopup = addPopupRes.hideFunc;\n        }\n\n        filterWrapper.filterPromise!.then(filter => {\n            // need to make sure the filter is present before positioning, as only\n            // after filter it is visible can we find out what the width of it is\n            positionCallback(eMenu);\n\n            if (filter!.afterGuiAttached) {\n                filter!.afterGuiAttached({ container: 'columnMenu', hidePopup });\n            }\n        });\n\n        column.setMenuVisible(true, 'contextMenu');\n    }\n\n    private trapFocusWithin(e: KeyboardEvent, menu: HTMLElement) {\n        if (e.keyCode !== KeyCode.TAB ||\n            e.defaultPrevented ||\n            this.focusController.findNextFocusableElement(menu, false, e.shiftKey)) {\n            return;\n        }\n\n        e.preventDefault();\n\n        this.focusController.focusInto(menu, e.shiftKey);\n    }\n\n    public isMenuEnabled(column: Column): boolean {\n        // for standard, we show menu if filter is enabled, and the menu is not suppressed\n        return column.isFilterAllowed();\n    }\n}\n"]}