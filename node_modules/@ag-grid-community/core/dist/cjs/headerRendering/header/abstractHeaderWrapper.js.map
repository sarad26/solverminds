{"version":3,"sources":["../../src/ts/headerRendering/header/abstractHeaderWrapper.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAEA,6EAA4E;AAC5E,iDAA4E;AAE5E;IAAoD,yCAAqB;IAAzE;;IAyBA,CAAC;IAlBa,0DAA0B,GAApC,UAAqC,CAAgB;QAC3C,IAAA,4CAAqE,EAAnE,kCAAc,EAAE,kBAAmD,CAAC;QAE5E,OAAO,+CAAoC,CACvC,IAAI,CAAC,kBAAkB,EACvB,CAAC,EACD,cAAc,EACd,MAAM,CACT,CAAC;IACN,CAAC;IAEM,yCAAS,GAAhB;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAEM,yCAAS,GAAhB;QACI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IACL,4BAAC;AAAD,CAzBA,AAyBC,CAzBmD,6CAAqB,GAyBxE;AAzBqB,sDAAqB","file":"abstractHeaderWrapper.js","sourcesContent":["import { ColumnGroup } from \"../../entities/columnGroup\";\nimport { Column } from \"../../entities/column\";\nimport { ManagedFocusComponent } from \"../../widgets/managedFocusComponent\";\nimport { isUserSuppressingHeaderKeyboardEvent } from \"../../utils/keyboard\";\n\nexport abstract class AbstractHeaderWrapper extends ManagedFocusComponent {\n\n    protected abstract readonly column: Column | ColumnGroup;\n    protected abstract readonly pinned: string | null;\n\n    protected abstract onFocusIn(e: FocusEvent): void;\n\n    protected shouldStopEventPropagation(e: KeyboardEvent): boolean {\n        const { headerRowIndex, column } = this.focusController.getFocusedHeader()!;\n\n        return isUserSuppressingHeaderKeyboardEvent(\n            this.gridOptionsWrapper,\n            e,\n            headerRowIndex,\n            column\n        );\n    }\n\n    public getColumn(): Column | ColumnGroup {\n        return this.column;\n    }\n\n    public getPinned(): string | null {\n        return this.pinned;\n    }\n}"]}