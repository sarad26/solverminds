{"version":3,"sources":["../../src/ts/headerRendering/header/headerWrapperComp.ts"],"names":[],"mappings":"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","file":"headerWrapperComp.js","sourcesContent":["import { AgCheckbox } from \"../../widgets/agCheckbox\";\nimport { Autowired, PreDestroy } from \"../../context/context\";\nimport { Beans } from \"../../rendering/beans\";\nimport { Column } from \"../../entities/column\";\nimport { DragAndDropService, DragItem, DragSource, DragSourceType } from \"../../dragAndDrop/dragAndDropService\";\nimport { ColDef } from \"../../entities/colDef\";\nimport { Constants } from \"../../constants/constants\";\nimport { ColumnApi } from \"../../columnController/columnApi\";\nimport { ColumnController } from \"../../columnController/columnController\";\nimport { ColumnHoverService } from \"../../rendering/columnHoverService\";\nimport { CssClassApplier } from \"../cssClassApplier\";\nimport { Events } from \"../../events\";\nimport { IHeaderComp, IHeaderParams, HeaderComp } from \"./headerComp\";\nimport { IMenuFactory } from \"../../interfaces/iMenuFactory\";\nimport { GridApi } from \"../../gridApi\";\nimport { HorizontalResizeService } from \"../horizontalResizeService\";\nimport { HoverFeature } from \"../hoverFeature\";\nimport { SetLeftFeature } from \"../../rendering/features/setLeftFeature\";\nimport { SortController } from \"../../sortController\";\nimport { SelectAllFeature } from \"./selectAllFeature\";\nimport { RefSelector } from \"../../widgets/componentAnnotations\";\nimport { TouchListener } from \"../../widgets/touchListener\";\nimport { UserComponentFactory } from \"../../components/framework/userComponentFactory\";\nimport { AbstractHeaderWrapper } from \"./abstractHeaderWrapper\";\nimport { HeaderRowComp } from \"../headerRowComp\";\nimport { setAriaSort, getAriaSortState, removeAriaSort } from \"../../utils/aria\";\nimport { addCssClass, addOrRemoveCssClass, removeCssClass, setDisplayed } from \"../../utils/dom\";\nimport { KeyCode } from '../../constants/keyCode';\nimport { ITooltipParams } from \"../../rendering/tooltipComponent\";\nimport { escapeString } from \"../../utils/string\";\n\nexport class HeaderWrapperComp extends AbstractHeaderWrapper {\n\n    private static TEMPLATE = /* html */\n        `<div class=\"ag-header-cell\" role=\"columnheader\" unselectable=\"on\" tabindex=\"-1\">\n            <div ref=\"eResize\" class=\"ag-header-cell-resize\" role=\"presentation\"></div>\n            <ag-checkbox ref=\"cbSelectAll\" class=\"ag-header-select-all\" role=\"presentation\"></ag-checkbox>\n        </div>`;\n\n    @Autowired('dragAndDropService') private dragAndDropService: DragAndDropService;\n    @Autowired('columnController') private columnController: ColumnController;\n    @Autowired('horizontalResizeService') private horizontalResizeService: HorizontalResizeService;\n    @Autowired('menuFactory') private menuFactory: IMenuFactory;\n    @Autowired('gridApi') private gridApi: GridApi;\n    @Autowired('columnApi') private columnApi: ColumnApi;\n    @Autowired('sortController') private sortController: SortController;\n    @Autowired('userComponentFactory') private userComponentFactory: UserComponentFactory;\n    @Autowired('columnHoverService') private columnHoverService: ColumnHoverService;\n    @Autowired('beans') protected beans: Beans;\n\n    @RefSelector('eResize') private eResize: HTMLElement;\n    @RefSelector('cbSelectAll') private cbSelectAll: AgCheckbox;\n\n    protected readonly column: Column;\n    protected readonly pinned: string | null;\n\n    private headerComp: IHeaderComp | undefined;\n    private headerCompGui: HTMLElement | undefined;\n\n    private headerCompVersion = 0;\n    private resizeStartWidth: number;\n    private resizeWithShiftKey: boolean;\n    private sortable: boolean | null | undefined;\n    private menuEnabled: boolean;\n\n    private colDefVersion: number;\n    private refreshFunctions: (() => void)[] = [];\n\n    private moveDragSource: DragSource | undefined;\n    private displayName: string | null;\n    private draggable: boolean;\n\n    private colDefHeaderComponent?: string | { new(): any; };\n    private colDefHeaderComponentFramework?: any;\n\n    constructor(column: Column, pinned: string | null) {\n        super(HeaderWrapperComp.TEMPLATE);\n        this.column = column;\n        this.pinned = pinned;\n    }\n\n    protected postConstruct(): void {\n        super.postConstruct();\n\n        this.colDefVersion = this.columnController.getColDefVersion();\n\n        this.updateState();\n\n        this.setupWidth();\n        this.setupMovingCss();\n        this.setupTooltip();\n        this.setupResize();\n        this.setupMenuClass();\n        this.setupSortableClass();\n        this.addColumnHoverListener();\n        this.addActiveHeaderMouseListeners();\n\n        this.createManagedBean(new HoverFeature([this.column], this.getGui()));\n\n        this.addManagedListener(this.column, Column.EVENT_FILTER_ACTIVE_CHANGED, this.onFilterChanged.bind(this));\n        this.onFilterChanged();\n\n        this.createManagedBean(new SelectAllFeature(this.cbSelectAll, this.column));\n        this.cbSelectAll.setParentComponent(this);\n        this.createManagedBean(new SetLeftFeature(this.column, this.getGui(), this.beans));\n\n        this.addAttributes();\n        CssClassApplier.addHeaderClassesFromColDef(this.column.getColDef(), this.getGui(), this.gridOptionsWrapper,\n            this.column, null);\n\n        this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this));\n\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_VALUE_CHANGED, this.onColumnValueChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onColumnRowGroupChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_CHANGED, this.onColumnPivotChanged.bind(this));\n\n        this.appendHeaderComp();\n    }\n\n    private onColumnRowGroupChanged(): void {\n        this.checkDisplayName();\n    }\n\n    private onColumnPivotChanged(): void {\n        this.checkDisplayName();\n    }\n\n    private onColumnValueChanged(): void {\n        this.checkDisplayName();\n    }\n\n    private checkDisplayName(): void {\n        // display name can change if aggFunc different, eg sum(Gold) is now max(Gold)\n        if (this.displayName !== this.calculateDisplayName()) {\n            this.refresh();\n        }\n    }\n\n    private updateState(): void {\n        const colDef = this.column.getColDef();\n        this.sortable = colDef.sortable;\n        this.displayName = this.calculateDisplayName();\n        this.draggable = this.workOutDraggable();\n    }\n\n    private calculateDisplayName(): string | null {\n        return this.columnController.getDisplayNameForColumn(this.column, 'header', true);\n    }\n\n    private onNewColumnsLoaded(): void {\n        const colDefVersionNow = this.columnController.getColDefVersion();\n        if (colDefVersionNow != this.colDefVersion) {\n            this.colDefVersion = colDefVersionNow;\n            this.refresh();\n        }\n    }\n\n    private refresh(): void {\n        this.updateState();\n        this.refreshHeaderComp();\n        this.refreshFunctions.forEach(f => f());\n    }\n\n    private refreshHeaderComp(): void {\n        // if no header comp created yet, it's cos of async creation, so first version is yet\n        // to get here, in which case nothing to refresh\n        if (!this.headerComp) { return; }\n\n        const colDef = this.column.getColDef();\n        const newHeaderCompConfigured =\n            this.colDefHeaderComponent != colDef.headerComponent\n            || this.colDefHeaderComponentFramework != colDef.headerComponentFramework;\n\n        const headerCompRefreshed = newHeaderCompConfigured ? false : this.attemptHeaderCompRefresh();\n        if (headerCompRefreshed) {\n            const dragSourceIsMissing = this.draggable && !this.moveDragSource;\n            const dragSourceNeedsRemoving = !this.draggable && this.moveDragSource;\n            if (dragSourceIsMissing || dragSourceNeedsRemoving) {\n                this.attachDraggingToHeaderComp();\n            }\n        } else {\n            this.appendHeaderComp();\n        }\n    }\n\n    @PreDestroy\n    private destroyHeaderComp(): void {\n        if (this.headerComp) {\n            this.getGui().removeChild(this.headerCompGui!);\n            this.headerComp = this.destroyBean(this.headerComp);\n            this.headerCompGui = undefined;\n        }\n        this.removeMoveDragSource();\n    }\n\n    private removeMoveDragSource(): void {\n        if (this.moveDragSource) {\n            this.dragAndDropService.removeDragSource(this.moveDragSource);\n            this.moveDragSource = undefined;\n        }\n    }\n\n    public attemptHeaderCompRefresh(): boolean {\n        // if no refresh method, then we want to replace the headerComp\n        if (!this.headerComp!.refresh) { return false; }\n\n        // if the cell renderer has a refresh method, we call this instead of doing a refresh\n        const params = this.createParams();\n\n        // take any custom params off of the user\n        const finalParams = this.userComponentFactory.createFinalParams(this.getComponentHolder(), 'headerComponent', params);\n\n        const res = this.headerComp!.refresh(finalParams);\n\n        return res;\n    }\n\n    private addActiveHeaderMouseListeners(): void {\n        const listener = (e: MouseEvent) => this.setActiveHeader(e.type === 'mouseenter');\n        this.addManagedListener(this.getGui(), 'mouseenter', listener);\n        this.addManagedListener(this.getGui(), 'mouseleave', listener);\n    }\n\n    private setActiveHeader(active: boolean): void {\n        addOrRemoveCssClass(this.getGui(), 'ag-header-active', active);\n    }\n\n    protected onFocusIn(e: FocusEvent) {\n        if (!this.getGui().contains(e.relatedTarget as HTMLElement)) {\n            const headerRow = this.getParentComponent() as HeaderRowComp;\n            this.focusController.setFocusedHeader(\n                headerRow.getRowIndex(),\n                this.getColumn()\n            );\n        }\n\n        this.setActiveHeader(true);\n    }\n\n    protected onFocusOut(e: FocusEvent) {\n        if (\n            this.getGui().contains(e.relatedTarget as HTMLElement)\n        ) { return; }\n\n        this.setActiveHeader(false);\n    }\n\n    protected handleKeyDown(e: KeyboardEvent): void {\n        const headerComp = this.headerComp as HeaderComp;\n        if (!headerComp) { return; }\n\n        if (e.keyCode === KeyCode.SPACE) {\n            const checkbox = this.cbSelectAll;\n            if (checkbox.isDisplayed() && !checkbox.getGui().contains(document.activeElement)) {\n                e.preventDefault();\n                checkbox.setValue(!checkbox.getValue());\n            }\n        }\n\n        if (e.keyCode === KeyCode.ENTER) {\n            if (e.ctrlKey || e.metaKey) {\n                if (this.menuEnabled && headerComp.showMenu) {\n                    e.preventDefault();\n                    headerComp.showMenu();\n                }\n            } else if (this.sortable) {\n                const multiSort = e.shiftKey;\n                this.sortController.progressSort(this.column, multiSort, \"uiColumnSorted\");\n            }\n        }\n    }\n\n    protected onTabKeyDown(): void { }\n\n    public getComponentHolder(): ColDef {\n        return this.column.getColDef();\n    }\n\n    private addColumnHoverListener(): void {\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_HOVER_CHANGED, this.onColumnHover.bind(this));\n        this.onColumnHover();\n    }\n\n    private onColumnHover(): void {\n        const isHovered = this.columnHoverService.isHovered(this.column);\n        addOrRemoveCssClass(this.getGui(), 'ag-column-hover', isHovered);\n    }\n\n    private setupSortableClass(): void {\n\n        const eGui = this.getGui();\n\n        const updateSortableCssClass = () => {\n            addOrRemoveCssClass(eGui, 'ag-header-cell-sortable', !!this.sortable);\n        };\n\n        const updateAriaSort = () => {\n            if (this.sortable) {\n                setAriaSort(eGui, getAriaSortState(this.column));\n            } else {\n                removeAriaSort(eGui);\n            }\n        };\n\n        updateSortableCssClass();\n        updateAriaSort();\n\n        this.refreshFunctions.push(updateSortableCssClass);\n        this.refreshFunctions.push(updateAriaSort);\n\n        this.addManagedListener(this.column, Column.EVENT_SORT_CHANGED, updateAriaSort.bind(this));\n    }\n\n    private onFilterChanged(): void {\n        const filterPresent = this.column.isFilterActive();\n        addOrRemoveCssClass(this.getGui(), 'ag-header-cell-filtered', filterPresent);\n    }\n\n    private appendHeaderComp(): void {\n        this.headerCompVersion++;\n\n        const colDef = this.column.getColDef();\n        this.colDefHeaderComponent = colDef.headerComponent;\n        this.colDefHeaderComponentFramework = colDef.headerComponentFramework;\n\n        const params = this.createParams();\n        const callback = this.afterHeaderCompCreated.bind(this, this.headerCompVersion);\n        this.userComponentFactory.newHeaderComponent(params)!.then(callback);\n    }\n\n    private createParams(): IHeaderParams {\n\n        const colDef = this.column.getColDef();\n\n        this.menuEnabled = this.menuFactory.isMenuEnabled(this.column) && !colDef.suppressMenu;\n\n        const params = {\n            column: this.column,\n            displayName: this.displayName,\n            enableSorting: colDef.sortable,\n            enableMenu: this.menuEnabled,\n            showColumnMenu: (source: HTMLElement) => {\n                this.gridApi.showColumnMenuAfterButtonClick(this.column, source);\n            },\n            progressSort: (multiSort?: boolean) => {\n                this.sortController.progressSort(this.column, !!multiSort, \"uiColumnSorted\");\n            },\n            setSort: (sort: string, multiSort?: boolean) => {\n                this.sortController.setSortForColumn(this.column, sort, !!multiSort, \"uiColumnSorted\");\n            },\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            context: this.gridOptionsWrapper.getContext(),\n            eGridHeader: this.getGui()\n        } as IHeaderParams;\n        return params;\n    }\n\n    private afterHeaderCompCreated(version: number, headerComp: IHeaderComp): void {\n\n        if (version != this.headerCompVersion || !this.isAlive()) {\n            this.destroyBean(headerComp);\n            return;\n        }\n\n        this.destroyHeaderComp();\n\n        this.headerComp = headerComp;\n        this.headerCompGui = headerComp.getGui();\n        this.getGui().appendChild(this.headerCompGui);\n\n        this.attachDraggingToHeaderComp();\n    }\n\n    private onColumnMovingChanged(): void {\n        // this function adds or removes the moving css, based on if the col is moving.\n        // this is what makes the header go dark when it is been moved (gives impression to\n        // user that the column was picked up).\n        if (this.column.isMoving()) {\n            addCssClass(this.getGui(), 'ag-header-cell-moving');\n        } else {\n            removeCssClass(this.getGui(), 'ag-header-cell-moving');\n        }\n    }\n\n    private workOutDraggable(): boolean {\n        const colDef = this.column.getColDef();\n        const isSuppressMovableColumns = this.gridOptionsWrapper.isSuppressMovableColumns();\n\n        const colCanMove = !isSuppressMovableColumns && !colDef.suppressMovable && !colDef.lockPosition;\n\n        // we should still be allowed drag the column, even if it can't be moved, if the column\n        // can be dragged to a rowGroup or pivot drop zone\n        return !!colCanMove || !!colDef.enableRowGroup || !!colDef.enablePivot;\n    }\n\n    private attachDraggingToHeaderComp(): void {\n\n        this.removeMoveDragSource();\n\n        if (!this.draggable) { return; }\n\n        this.moveDragSource = {\n            type: DragSourceType.HeaderCell,\n            eElement: this.headerCompGui!,\n            defaultIconName: DragAndDropService.ICON_HIDE,\n            getDragItem: () => this.createDragItem(),\n            dragItemName: this.displayName,\n            onDragStarted: () => this.column.setMoving(true, \"uiColumnMoved\"),\n            onDragStopped: () => this.column.setMoving(false, \"uiColumnMoved\")\n        };\n\n        this.dragAndDropService.addDragSource(this.moveDragSource, true);\n    }\n\n    private createDragItem(): DragItem {\n        const visibleState: { [key: string]: boolean; } = {};\n        visibleState[this.column.getId()] = this.column.isVisible();\n\n        return {\n            columns: [this.column],\n            visibleState: visibleState\n        };\n    }\n\n    private setupResize(): void {\n        const colDef = this.getComponentHolder();\n\n        const destroyResizeFuncs: (() => void)[] = [];\n\n        let canResize: boolean;\n        let canAutosize: boolean;\n\n        const addResize = () => {\n            setDisplayed(this.eResize, canResize);\n\n            if (!canResize) { return; }\n\n            const finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n                eResizeBar: this.eResize,\n                onResizeStart: this.onResizeStart.bind(this),\n                onResizing: this.onResizing.bind(this, false),\n                onResizeEnd: this.onResizing.bind(this, true)\n            });\n            destroyResizeFuncs.push(finishedWithResizeFunc);\n\n            if (canAutosize) {\n                const skipHeaderOnAutoSize = this.gridOptionsWrapper.isSkipHeaderOnAutoSize();\n\n                const autoSizeColListener = () => {\n                    this.columnController.autoSizeColumn(this.column, skipHeaderOnAutoSize, \"uiColumnResized\");\n                };\n\n                this.eResize.addEventListener('dblclick', autoSizeColListener);\n                const touchListener: TouchListener = new TouchListener(this.eResize);\n                touchListener.addEventListener(TouchListener.EVENT_DOUBLE_TAP, autoSizeColListener);\n\n                this.addDestroyFunc(() => {\n                    this.eResize.removeEventListener('dblclick', autoSizeColListener);\n                    touchListener.removeEventListener(TouchListener.EVENT_DOUBLE_TAP, autoSizeColListener);\n                    touchListener.destroy();\n                });\n            }\n        };\n\n        const removeResize = () => {\n            destroyResizeFuncs.forEach(f => f());\n            destroyResizeFuncs.length = 0;\n        };\n\n        const refresh = () => {\n            const resize = this.column.isResizable();\n            const autoSize = !this.gridOptionsWrapper.isSuppressAutoSize() && !colDef.suppressAutoSize;\n            const propertyChange = resize !== canResize || autoSize !== canAutosize;\n            if (propertyChange) {\n                canResize = resize;\n                canAutosize = autoSize;\n                removeResize();\n                addResize();\n            }\n        };\n\n        refresh();\n        this.addDestroyFunc(removeResize);\n        this.refreshFunctions.push(refresh);\n    }\n\n    public onResizing(finished: boolean, resizeAmount: number): void {\n        const resizeAmountNormalised = this.normaliseResizeAmount(resizeAmount);\n        const columnWidths = [{ key: this.column, newWidth: this.resizeStartWidth + resizeAmountNormalised }];\n        this.columnController.setColumnWidths(columnWidths, this.resizeWithShiftKey, finished, \"uiColumnDragged\");\n\n        if (finished) {\n            removeCssClass(this.getGui(), 'ag-column-resizing');\n        }\n    }\n\n    public onResizeStart(shiftKey: boolean): void {\n        this.resizeStartWidth = this.column.getActualWidth();\n        this.resizeWithShiftKey = shiftKey;\n\n        addCssClass(this.getGui(), 'ag-column-resizing');\n    }\n\n    public getTooltipParams(): ITooltipParams {\n        const res = super.getTooltipParams();\n        res.location = 'header';\n        res.colDef = this.column.getColDef();\n        return res;\n    }\n\n    private setupTooltip(): void {\n\n        const refresh = () => {\n            const newTooltipText = this.column.getColDef().headerTooltip;\n            this.setTooltip(escapeString(newTooltipText));\n        };\n\n        refresh();\n\n        this.refreshFunctions.push(refresh);\n    }\n\n    private setupMovingCss(): void {\n        this.addManagedListener(this.column, Column.EVENT_MOVING_CHANGED, this.onColumnMovingChanged.bind(this));\n        this.onColumnMovingChanged();\n    }\n\n    private addAttributes(): void {\n        this.getGui().setAttribute(\"col-id\", this.column.getColId());\n    }\n\n    private setupWidth(): void {\n        this.addManagedListener(this.column, Column.EVENT_WIDTH_CHANGED, this.onColumnWidthChanged.bind(this));\n        this.onColumnWidthChanged();\n    }\n\n    private setupMenuClass(): void {\n        this.addManagedListener(this.column, Column.EVENT_MENU_VISIBLE_CHANGED, this.onMenuVisible.bind(this));\n    }\n\n    private onMenuVisible(): void {\n        this.addOrRemoveCssClass('ag-column-menu-visible', this.column.isMenuVisible());\n    }\n\n    private onColumnWidthChanged(): void {\n        this.getGui().style.width = this.column.getActualWidth() + 'px';\n    }\n\n    // optionally inverts the drag, depending on pinned and RTL\n    // note - this method is duplicated in RenderedHeaderGroupCell - should refactor out?\n    private normaliseResizeAmount(dragChange: number): number {\n        let result = dragChange;\n\n        if (this.gridOptionsWrapper.isEnableRtl()) {\n            // for RTL, dragging left makes the col bigger, except when pinning left\n            if (this.pinned !== Constants.PINNED_LEFT) {\n                result *= -1;\n            }\n        } else {\n            // for LTR (ie normal), dragging left makes the col smaller, except when pinning right\n            if (this.pinned === Constants.PINNED_RIGHT) {\n                result *= -1;\n            }\n        }\n\n        return result;\n    }\n}\n"]}