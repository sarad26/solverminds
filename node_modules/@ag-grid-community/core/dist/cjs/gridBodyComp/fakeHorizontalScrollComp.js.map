{"version":3,"sources":["../../src/ts/gridBodyComp/fakeHorizontalScrollComp.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kDAAiD;AACjD,wEAA8D;AAC9D,8CAAmD;AACnD,mFAA4G;AAC5G,oCAAkF;AAClF,2DAA0D;AAE1D;IAA8C,4CAAS;IAmBnD;eACI,kBAAM,wBAAwB,CAAC,QAAQ,CAAC;IAC5C,CAAC;IAGO,gDAAa,GAArB;QADA,iBAkBC;QAhBG,IAAM,IAAI,GAA6B;YACnC,SAAS,EAAE,UAAA,MAAM,IAAI,OAAA,oBAAc,CAAC,KAAI,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,EAArC,CAAqC;YAC1D,kBAAkB,EAAE,UAAA,MAAM,IAAI,OAAA,oBAAc,CAAC,KAAI,CAAC,UAAU,EAAE,MAAM,CAAC,EAAvC,CAAuC;YACrE,iBAAiB,EAAE,UAAA,MAAM,IAAI,OAAA,oBAAc,CAAC,KAAI,CAAC,SAAS,EAAE,MAAM,CAAC,EAAtC,CAAsC;YACnE,wBAAwB,EAAE,UAAA,KAAK,IAAI,OAAA,mBAAa,CAAC,KAAI,CAAC,YAAY,EAAE,KAAK,CAAC,EAAvC,CAAuC;YAC1E,uBAAuB,EAAE,UAAA,KAAK,IAAI,OAAA,mBAAa,CAAC,KAAI,CAAC,WAAW,EAAE,KAAK,CAAC,EAAtC,CAAsC;YACxE,kBAAkB,EAAE,UAAC,WAAW,IAAK,OAAA,yBAAmB,CAAC,KAAI,CAAC,MAAM,EAAE,EAAE,wBAAwB,EAAE,WAAW,CAAC,EAAzE,CAAyE;YAC9G,4BAA4B,EAAE,UAAC,QAAgB,EAAE,OAAgB;gBAC7D,OAAA,yBAAmB,CAAC,KAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,OAAO,CAAC;YAAxD,CAAwD;YAC5D,6BAA6B,EAAE,UAAC,QAAgB,EAAE,OAAgB;gBAC9D,OAAA,yBAAmB,CAAC,KAAI,CAAC,YAAY,EAAE,QAAQ,EAAE,OAAO,CAAC;YAAzD,CAAyD;SAChE,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,+DAA8B,EAAE,CAAC,CAAC;QAC/E,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAE/D,IAAI,CAAC,iBAAiB,CAAC,IAAI,uCAAkB,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,GAAM,KAAK,OAAI,EAA1C,CAA0C,CAAC,CAAC,CAAC;IACxG,CAAC;IAvCc,iCAAQ,GACnB,wbAMO,CAAC;IAGgB;QAA3B,kCAAW,CAAC,aAAa,CAAC;iEAAkC;IAChC;QAA5B,kCAAW,CAAC,cAAc,CAAC;kEAAmC;IACrC;QAAzB,kCAAW,CAAC,WAAW,CAAC;+DAAgC;IAC9B;QAA1B,kCAAW,CAAC,YAAY,CAAC;gEAAiC;IAS3D;QADC,uBAAa;iEAkBb;IACL,+BAAC;CA1CD,AA0CC,CA1C6C,qBAAS,GA0CtD;AA1CY,4DAAwB","file":"fakeHorizontalScrollComp.js","sourcesContent":["import { Component } from \"../widgets/component\";\nimport { RefSelector } from \"../widgets/componentAnnotations\";\nimport { PostConstruct } from \"../context/context\";\nimport { FakeHorizontalScrollController, FakeHorizontalScrollView } from \"./fakeHorizontalScrollController\";\nimport { addOrRemoveCssClass, setFixedHeight, setFixedWidth } from \"../utils/dom\";\nimport { CenterWidthFeature } from \"./centerWidthFeature\";\n\nexport class FakeHorizontalScrollComp extends Component {\n\n    private static TEMPLATE = /* html */\n        `<div class=\"ag-body-horizontal-scroll\" aria-hidden=\"true\">\n            <div class=\"ag-horizontal-left-spacer\" ref=\"eLeftSpacer\"></div>\n            <div class=\"ag-body-horizontal-scroll-viewport\" ref=\"eViewport\">\n                <div class=\"ag-body-horizontal-scroll-container\" ref=\"eContainer\"></div>\n            </div>\n            <div class=\"ag-horizontal-right-spacer\" ref=\"eRightSpacer\"></div>\n        </div>`;\n\n    // fake horizontal scroller\n    @RefSelector('eLeftSpacer') private eLeftSpacer: HTMLElement;\n    @RefSelector('eRightSpacer') private eRightSpacer: HTMLElement;\n    @RefSelector('eViewport') private eViewport: HTMLElement;\n    @RefSelector('eContainer') private eContainer: HTMLElement;\n\n    private controller: FakeHorizontalScrollController;\n\n    constructor() {\n        super(FakeHorizontalScrollComp.TEMPLATE);\n    }\n\n    @PostConstruct\n    private postConstruct(): void {\n        const view: FakeHorizontalScrollView = {\n            setHeight: height => setFixedHeight(this.getGui(), height),\n            setContainerHeight: height => setFixedHeight(this.eContainer, height),\n            setViewportHeight: height => setFixedHeight(this.eViewport, height),\n            setRightSpacerFixedWidth: width => setFixedWidth(this.eRightSpacer, width),\n            setLeftSpacerFixedWidth: width => setFixedWidth(this.eLeftSpacer, width),\n            setInvisibleStyles: (isInvisible) => addOrRemoveCssClass(this.getGui(), 'ag-invisible-scrollbar', isInvisible),\n            includeLeftSpacerScrollerCss: (cssClass: string, include: boolean) =>\n                addOrRemoveCssClass(this.eLeftSpacer, cssClass, include),\n            includeRightSpacerScrollerCss: (cssClass: string, include: boolean) =>\n                addOrRemoveCssClass(this.eRightSpacer, cssClass, include),\n        };\n        this.controller = this.createManagedBean(new FakeHorizontalScrollController());\n        this.controller.setView(view, this.eViewport, this.eContainer);\n\n        this.createManagedBean(new CenterWidthFeature(width => this.eContainer.style.width = `${width}px`));\n    }\n}"]}