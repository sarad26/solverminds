{"version":3,"sources":["../../src/ts/gridBodyComp/gridBodyComp.ts"],"names":[],"mappings":"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","file":"gridBodyComp.js","sourcesContent":["import { Autowired, Optional, PostConstruct } from '../context/context';\nimport { Events } from '../events';\nimport { IRangeController } from '../interfaces/iRangeController';\nimport { IContextMenuFactory } from '../interfaces/iContextMenuFactory';\nimport { GridApi } from '../gridApi';\nimport { Component } from '../widgets/component';\nimport { Beans } from '../rendering/beans';\nimport { RefSelector } from '../widgets/componentAnnotations';\nimport { HeaderRootComp } from '../headerRendering/headerRootComp';\nimport { ResizeObserverService } from '../misc/resizeObserverService';\nimport { setAriaColCount, setAriaMultiSelectable, setAriaRowCount } from '../utils/aria';\nimport { addCssClass, addOrRemoveCssClass, removeCssClass } from '../utils/dom';\nimport { IMenuFactory } from \"../interfaces/iMenuFactory\";\nimport { LayoutCssClasses } from \"../styling/layoutFeature\";\nimport {\n    CSS_CLASS_CELL_SELECTABLE,\n    CSS_CLASS_COLUMN_MOVING,\n    CSS_CLASS_FORCE_VERTICAL_SCROLL,\n    GridBodyController,\n    GridBodyView,\n    RowAnimationCssClasses\n} from \"./gridBodyController\";\nimport { RowContainerNames } from \"./rowContainer/rowContainerController\";\n\nconst GRID_BODY_TEMPLATE = /* html */\n    `<div class=\"ag-root ag-unselectable\" role=\"grid\" unselectable=\"on\">\n        <ag-header-root ref=\"headerRoot\" unselectable=\"on\"></ag-header-root>\n        <div class=\"ag-floating-top\" ref=\"eTop\" role=\"presentation\" unselectable=\"on\">\n            <ag-row-container ref=\"topLeftContainer\" name=\"${RowContainerNames.TOP_LEFT}\"></ag-row-container>\n            <ag-row-container ref=\"topCenterContainer\" name=\"${RowContainerNames.TOP_CENTER}\"></ag-row-container>\n            <ag-row-container ref=\"topRightContainer\" name=\"${RowContainerNames.TOP_RIGHT}\"></ag-row-container>\n            <ag-row-container ref=\"topFullWidthContainer\" name=\"${RowContainerNames.TOP_FULL_WITH}\"></ag-row-container>\n        </div>\n        <div class=\"ag-body-viewport\" ref=\"eBodyViewport\" role=\"presentation\">\n            <ag-row-container ref=\"leftContainer\" name=\"${RowContainerNames.LEFT}\"></ag-row-container>\n            <ag-row-container ref=\"centerContainer\" name=\"${RowContainerNames.CENTER}\"></ag-row-container>\n            <ag-row-container ref=\"rightContainer\" name=\"${RowContainerNames.RIGHT}\"></ag-row-container>\n            <ag-row-container ref=\"fullWidthContainer\" name=\"${RowContainerNames.FULL_WIDTH}\"></ag-row-container>\n        </div>\n        <div class=\"ag-floating-bottom\" ref=\"eBottom\" role=\"presentation\" unselectable=\"on\">\n            <ag-row-container ref=\"bottomLeftContainer\" name=\"${RowContainerNames.BOTTOM_LEFT}\"></ag-row-container>\n            <ag-row-container ref=\"bottomCenterContainer\" name=\"${RowContainerNames.BOTTOM_CENTER}\"></ag-row-container>\n            <ag-row-container ref=\"bottomRightContainer\" name=\"${RowContainerNames.BOTTOM_RIGHT}\"></ag-row-container>\n            <ag-row-container ref=\"bottomFullWidthContainer\" name=\"${RowContainerNames.BOTTOM_FULL_WITH}\"></ag-row-container>\n        </div>\n        <ag-fake-horizontal-scroll></ag-fake-horizontal-scroll>\n        <ag-overlay-wrapper></ag-overlay-wrapper>\n    </div>`;\n\nexport class GridBodyComp extends Component {\n\n    @Autowired('beans') private beans: Beans;\n    @Autowired('gridApi') private gridApi: GridApi;\n    @Autowired('$scope') private $scope: any;\n    @Autowired('resizeObserverService') private resizeObserverService: ResizeObserverService;\n\n    @Optional('rangeController') private rangeController: IRangeController;\n    @Optional('contextMenuFactory') private contextMenuFactory: IContextMenuFactory;\n    @Optional('menuFactory') private menuFactory: IMenuFactory;\n\n    @RefSelector('eBodyViewport') private eBodyViewport: HTMLElement;\n    @RefSelector('eTop') private eTop: HTMLElement;\n    @RefSelector('eBottom') private eBottom: HTMLElement;\n    @RefSelector('headerRoot') headerRootComp: HeaderRootComp;\n\n    private controller: GridBodyController;\n\n    constructor() {\n        super(GRID_BODY_TEMPLATE);\n    }\n\n    @PostConstruct\n    private init() {\n\n        const setHeight = (height: number, element: HTMLElement) => {\n            const heightString = `${height}px`;\n            element.style.minHeight = heightString;\n            element.style.height = heightString;\n        };\n\n        const view: GridBodyView = {\n            setRowAnimationCssOnBodyViewport: this.setRowAnimationCssOnBodyViewport.bind(this),\n            setColumnCount: count => setAriaColCount(this.getGui(), count),\n            setRowCount: count => setAriaRowCount(this.getGui(), count),\n            setTopHeight: height => setHeight(height, this.eTop),\n            setBottomHeight: height => setHeight(height, this.eBottom),\n            setTopDisplay: display => this.eTop.style.display = display,\n            setBottomDisplay: display => this.eBottom.style.display = display,\n            setColumnMovingCss: moving => this.addOrRemoveCssClass(CSS_CLASS_COLUMN_MOVING, moving),\n            updateLayoutClasses: params => {\n                addOrRemoveCssClass(this.eBodyViewport, LayoutCssClasses.AUTO_HEIGHT, params.autoHeight);\n                addOrRemoveCssClass(this.eBodyViewport, LayoutCssClasses.NORMAL, params.normal);\n                addOrRemoveCssClass(this.eBodyViewport, LayoutCssClasses.PRINT, params.print);\n\n                this.addOrRemoveCssClass(LayoutCssClasses.AUTO_HEIGHT, params.autoHeight);\n                this.addOrRemoveCssClass(LayoutCssClasses.NORMAL, params.normal);\n                this.addOrRemoveCssClass(LayoutCssClasses.PRINT, params.print);\n            },\n            setAlwaysVerticalScrollClass: on =>\n                addOrRemoveCssClass(this.eBodyViewport, CSS_CLASS_FORCE_VERTICAL_SCROLL, on),\n            registerBodyViewportResizeListener: listener => {\n                const unsubscribeFromResize = this.resizeObserverService.observeResize(this.eBodyViewport, listener);\n                this.addDestroyFunc(() => unsubscribeFromResize());\n            },\n            setVerticalScrollPaddingVisible: show => {\n                const scroller = show ? 'scroll' : 'hidden';\n                this.eTop.style.overflowY = this.eBottom.style.overflowY = scroller;\n            },\n            setCellSelectableCss: selectable => {\n                [this.eTop, this.eBodyViewport, this.eBottom]\n                    .forEach(ct => addOrRemoveCssClass(ct, CSS_CLASS_CELL_SELECTABLE, selectable));\n            },\n        };\n\n        this.controller = this.createManagedBean(new GridBodyController());\n        this.controller.setView(view, this.getGui(), this.eBodyViewport, this.eTop, this.eBottom);\n\n        if (this.$scope) {\n            this.addAngularApplyCheck();\n        }\n\n        this.gridApi.registerGridComp(this);\n        this.beans.registerGridComp(this);\n        if (this.contextMenuFactory) {\n            this.contextMenuFactory.registerGridComp(this);\n        }\n        if (this.menuFactory) {\n            this.menuFactory.registerGridComp(this);\n        }\n\n        if (this.rangeController || this.gridOptionsWrapper.isRowSelectionMulti()) {\n            setAriaMultiSelectable(this.getGui(), true);\n            if (this.rangeController) {\n                this.rangeController.registerGridComp(this);\n            }\n        }\n\n        [this.eTop, this.eBodyViewport, this.eBottom].forEach(element => {\n            this.addManagedListener(element, 'focusin', () => {\n                addCssClass(element, 'ag-has-focus');\n            });\n\n            this.addManagedListener(element, 'focusout', (e: FocusEvent) => {\n                if (!element.contains(e.relatedTarget as HTMLElement)) {\n                    removeCssClass(element, 'ag-has-focus');\n                }\n            });\n        });\n    }\n\n    private setRowAnimationCssOnBodyViewport(animateRows: boolean): void {\n        addOrRemoveCssClass(this.eBodyViewport, RowAnimationCssClasses.ANIMATION_ON, animateRows);\n        addOrRemoveCssClass(this.eBodyViewport, RowAnimationCssClasses.ANIMATION_OFF, !animateRows);\n    }\n\n    private addAngularApplyCheck(): void {\n        // this makes sure if we queue up requests, we only execute oe\n        let applyTriggered = false;\n\n        const listener = () => {\n            // only need to do one apply at a time\n            if (applyTriggered) { return; }\n            applyTriggered = true; // mark 'need apply' to true\n            window.setTimeout(() => {\n                applyTriggered = false;\n                this.$scope.$apply();\n            }, 0);\n        };\n\n        // these are the events we need to do an apply after - these are the ones that can end up\n        // with columns added or removed\n        this.addManagedListener(this.eventService, Events.EVENT_DISPLAYED_COLUMNS_CHANGED, listener);\n        this.addManagedListener(this.eventService, Events.EVENT_VIRTUAL_COLUMNS_CHANGED, listener);\n    }\n\n    public getFloatingTopBottom(): HTMLElement[] {\n        return [this.eTop, this.eBottom];\n    }\n\n    // + rangeController\n    public addScrollEventListener(listener: () => void): void {\n        this.eBodyViewport.addEventListener('scroll', listener);\n    }\n\n    // + rangeController\n    public removeScrollEventListener(listener: () => void): void {\n        this.eBodyViewport.removeEventListener('scroll', listener);\n    }\n}\n"]}